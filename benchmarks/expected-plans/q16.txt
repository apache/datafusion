Sort: supplier_cnt DESC NULLS FIRST, part.p_brand ASC NULLS LAST, part.p_type ASC NULLS LAST, part.p_size ASC NULLS LAST
  Projection: part.p_brand, part.p_type, part.p_size, COUNT(DISTINCT partsupp.ps_suppkey) AS supplier_cnt
    Projection: group_alias_0 AS part.p_brand, group_alias_1 AS part.p_type, group_alias_2 AS part.p_size, COUNT(alias1) AS COUNT(DISTINCT partsupp.ps_suppkey)
      Aggregate: groupBy=[[group_alias_0, group_alias_1, group_alias_2]], aggr=[[COUNT(alias1)]]
        Aggregate: groupBy=[[part.p_brand AS group_alias_0, part.p_type AS group_alias_1, part.p_size AS group_alias_2, partsupp.ps_suppkey AS alias1]], aggr=[[]]
          LeftAnti Join: partsupp.ps_suppkey = __sq_1.s_suppkey
            Inner Join: partsupp.ps_partkey = part.p_partkey
              TableScan: partsupp projection=[ps_partkey, ps_suppkey]
              Filter: part.p_brand != Utf8("Brand#45") AND part.p_type NOT LIKE Utf8("MEDIUM POLISHED%") AND part.p_size IN ([Int32(49), Int32(14), Int32(23), Int32(45), Int32(19), Int32(3), Int32(36), Int32(9)])
                TableScan: part projection=[p_partkey, p_brand, p_type, p_size]
            SubqueryAlias: __sq_1
              Projection: supplier.s_suppkey AS s_suppkey
                Filter: supplier.s_comment LIKE Utf8("%Customer%Complaints%")
                  TableScan: supplier projection=[s_suppkey, s_comment]
