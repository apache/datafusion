# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.See the License for the
# specific language governing permissions and limitations
# under the License.

query TR
select arrow_typeof(cast(1.23 as decimal(10,4))),
       cast(1.23 as decimal(10,4));
----
Decimal128(10, 4) 1.23


query TR
select arrow_typeof(cast(cast(1.23 as decimal(10,3)) as decimal(10,4))),
       cast(cast(1.23 as decimal(10,3)) as decimal(10,4));
----
Decimal128(10, 4) 1.23


query TR
select arrow_typeof(cast(1.2345 as decimal(24,2))), cast(1.2345 as decimal(24,2));
----
Decimal128(24, 2) 1.23


statement ok
CREATE EXTERNAL TABLE decimal_simple (
c1 DECIMAL(10,6) NOT NULL,
c2 DOUBLE NOT NULL,
c3 BIGINT NOT NULL,
c4 BOOLEAN NOT NULL,
c5 DECIMAL(12,7) NOT NULL
)
STORED AS CSV
WITH HEADER ROW
LOCATION 'tests/data/decimal_data.csv';


query TT
select arrow_typeof(c1), arrow_typeof(c5) from decimal_simple where c1 > c5 limit 1;
----
Decimal128(10, 6) Decimal128(12, 7)


query R rowsort
SELECT c1 from decimal_simple;
----
0.00001
0.00002
0.00002
0.00003
0.00003
0.00003
0.00004
0.00004
0.00004
0.00004
0.00005
0.00005
0.00005
0.00005
0.00005


query R rowsort
select c1 from decimal_simple where c1 > 0.000030;
----
0.00004
0.00004
0.00004
0.00004
0.00005
0.00005
0.00005
0.00005
0.00005


query RRIBR rowsort
select * from decimal_simple where c1 > c5;
----
0.00002 0.000000000002 3 false 0.000019
0.00003 0.000000000003 5 true 0.000011
0.00005 0.000000000005 8 false 0.000033


query TR
select arrow_typeof(min(c1)), min(c1) from decimal_simple where c4=false;
----
Decimal128(10, 6) 0.00002


query TR
select arrow_typeof(max(c1)), max(c1) from decimal_simple where c4=false;
----
Decimal128(10, 6) 0.00005


# inferred precision is 10+10
# inferred scale is the original scale
query TR
select arrow_typeof(sum(c1)), sum(c1) from decimal_simple;
----
Decimal128(20, 6) 0.00055


# inferred precision is original precision + 4
# inferred scale is the original scale + 4
query TR
select arrow_typeof(avg(c1)), avg(c1) from decimal_simple;
----
Decimal128(14, 10) 0.0000366666


query TR
select arrow_typeof(median(c1)), median(c1) from decimal_simple;
----
Decimal128(10, 6) 0.00004


query RRIBR rowsort
select * from decimal_simple where c1=CAST(0.00002 as Decimal(10,8));
----
0.00002 0.000000000002 2 true 0.000025
0.00002 0.000000000002 3 false 0.000019


query RI rowsort
select c2,c3 from decimal_simple where c1!=0.00002;
----
0.000000000001 1
0.000000000003 4
0.000000000003 5
0.000000000003 5
0.000000000004 12
0.000000000004 14
0.000000000004 5
0.000000000004 8
0.000000000005 1
0.000000000005 100
0.000000000005 4
0.000000000005 8
0.000000000005 9


query RRIBR
select * from decimal_simple where 0.00002 > c1;
----
0.00001 0.000000000001 1 true 0.000014


query RRIBR rowsort
select * from decimal_simple where c1 <= 0.00002;
----
0.00001 0.000000000001 1 true 0.000014
0.00002 0.000000000002 2 true 0.000025
0.00002 0.000000000002 3 false 0.000019


query RRIBR rowsort
select * from decimal_simple where c1 > 0.00002;
----
0.00003 0.000000000003 4 true 0.000032
0.00003 0.000000000003 5 false 0.000035
0.00003 0.000000000003 5 true 0.000011
0.00004 0.000000000004 12 false 0.00004
0.00004 0.000000000004 14 true 0.00004
0.00004 0.000000000004 5 true 0.000044
0.00004 0.000000000004 8 false 0.000044
0.00005 0.000000000005 1 false 0.0001
0.00005 0.000000000005 100 true 0.000068
0.00005 0.000000000005 4 true 0.000078
0.00005 0.000000000005 8 false 0.000033
0.00005 0.000000000005 9 true 0.000052


query RRIBR rowsort
select * from decimal_simple where c1 >= 0.00002;
----
0.00002 0.000000000002 2 true 0.000025
0.00002 0.000000000002 3 false 0.000019
0.00003 0.000000000003 4 true 0.000032
0.00003 0.000000000003 5 false 0.000035
0.00003 0.000000000003 5 true 0.000011
0.00004 0.000000000004 12 false 0.00004
0.00004 0.000000000004 14 true 0.00004
0.00004 0.000000000004 5 true 0.000044
0.00004 0.000000000004 8 false 0.000044
0.00005 0.000000000005 1 false 0.0001
0.00005 0.000000000005 100 true 0.000068
0.00005 0.000000000005 4 true 0.000078
0.00005 0.000000000005 8 false 0.000033
0.00005 0.000000000005 9 true 0.000052


query T
select arrow_typeof(c1+1) from decimal_simple limit 1;
----
Decimal128(27, 6)


query R rowsort
select c1+1 from decimal_simple;
----
1.00001
1.00002
1.00002
1.00003
1.00003
1.00003
1.00004
1.00004
1.00004
1.00004
1.00005
1.00005
1.00005
1.00005
1.00005


# array decimal(10,6) + array decimal(12,7) => decimal(13,7)
query T
select arrow_typeof(c1+c5) from decimal_simple limit 1;
----
Decimal128(13, 7)


query R rowsort
select c1+c5 from decimal_simple;
----
0.000024
0.000039
0.000041
0.000045
0.000062
0.000065
0.00008
0.00008
0.000083
0.000084
0.000084
0.000102
0.000118
0.000128
0.00015


query T
select arrow_typeof(c1-1) from decimal_simple limit 1;
----
Decimal128(27, 6)


query R rowsort
select c1-1 from decimal_simple;
----
-0.99995
-0.99995
-0.99995
-0.99995
-0.99995
-0.99996
-0.99996
-0.99996
-0.99996
-0.99997
-0.99997
-0.99997
-0.99998
-0.99998
-0.99999


query T
select arrow_typeof(c1-c5) from decimal_simple limit 1;
----
Decimal128(13, 7)


query R rowsort
select c1-c5 from decimal_simple;
----
-0.000002
-0.000002
-0.000004
-0.000004
-0.000004
-0.000005
-0.000005
-0.000018
-0.000028
-0.00005
0
0
0.000001
0.000017
0.000019


query T
select arrow_typeof(c1*20) from decimal_simple limit 1;
----
Decimal128(31, 6)


query R rowsort
select c1*20 from decimal_simple;
----
0.0002
0.0004
0.0004
0.0006
0.0006
0.0006
0.0008
0.0008
0.0008
0.0008
0.001
0.001
0.001
0.001
0.001


query T
select arrow_typeof(c1*c5) from decimal_simple limit 1;
----
Decimal128(23, 13)


query R rowsort
select c1*c5 from decimal_simple;
----
0.00000000014
0.00000000033
0.00000000038
0.0000000005
0.00000000096
0.00000000105
0.0000000016
0.0000000016
0.00000000165
0.00000000176
0.00000000176
0.0000000026
0.0000000034
0.0000000039
0.000000005


query T
select arrow_typeof(c1/cast(0.00001 as decimal(5,5))) from decimal_simple limit 1;
----
Decimal128(21, 12)


query R rowsort
select c1/cast(0.00001 as decimal(5,5)) from decimal_simple;
----
1
2
2
3
3
3
4
4
4
4
5
5
5
5
5


query T
select arrow_typeof(c1/c5) from decimal_simple limit 1;
----
Decimal128(30, 19)


query R rowsort
select c1/c5 from decimal_simple;
----
0.5
0.641025641026
0.714285714286
0.735294117647
0.8
0.857142857143
0.909090909091
0.909090909091
0.9375
0.961538461538
1
1
1.052631578947
1.515151515152
2.727272727273


query T
select arrow_typeof(c5%cast(0.00001 as decimal(5,5))) from decimal_simple limit 1;
----
Decimal128(7, 7)


query R rowsort
select c5%cast(0.00001 as decimal(5,5)) from decimal_simple;
----
0
0
0
0.000001
0.000002
0.000002
0.000003
0.000004
0.000004
0.000004
0.000005
0.000005
0.000008
0.000008
0.000009


query T
select arrow_typeof(c1%c5) from decimal_simple limit 1;
----
Decimal128(11, 7)


query R rowsort
select c1%c5 from decimal_simple;
----
0
0
0.000001
0.000008
0.00001
0.000017
0.00002
0.00003
0.00003
0.00004
0.00004
0.00005
0.00005
0.00005
0.00005


query T
select arrow_typeof(abs(c1)) from decimal_simple limit 1;
----
Float64


query R rowsort
SELECT abs(c1) from decimal_simple;
----
0.00001
0.00002
0.00002
0.00003
0.00003
0.00003
0.00004
0.00004
0.00004
0.00004
0.00005
0.00005
0.00005
0.00005
0.00005


query RRIBR
select * from decimal_simple where c1 >= 0.00004 order by c1;
----
0.00004 0.000000000004 5 true 0.000044
0.00004 0.000000000004 12 false 0.00004
0.00004 0.000000000004 14 true 0.00004
0.00004 0.000000000004 8 false 0.000044
0.00005 0.000000000005 9 true 0.000052
0.00005 0.000000000005 4 true 0.000078
0.00005 0.000000000005 8 false 0.000033
0.00005 0.000000000005 100 true 0.000068
0.00005 0.000000000005 1 false 0.0001


query RRIBR
select * from decimal_simple where c1 >= 0.00004 order by c1 limit 10;
----
0.00004 0.000000000004 5 true 0.000044
0.00004 0.000000000004 12 false 0.00004
0.00004 0.000000000004 14 true 0.00004
0.00004 0.000000000004 8 false 0.000044
0.00005 0.000000000005 9 true 0.000052
0.00005 0.000000000005 4 true 0.000078
0.00005 0.000000000005 8 false 0.000033
0.00005 0.000000000005 100 true 0.000068
0.00005 0.000000000005 1 false 0.0001


query RRIBR
select * from decimal_simple where c1 >= 0.00004 order by c1 limit 5;
----
0.00004 0.000000000004 5 true 0.000044
0.00004 0.000000000004 12 false 0.00004
0.00004 0.000000000004 14 true 0.00004
0.00004 0.000000000004 8 false 0.000044
0.00005 0.000000000005 9 true 0.000052


query RRIBR
select * from decimal_simple where c1 >= 0.00004 order by c1 desc;
----
0.00005 0.000000000005 9 true 0.000052
0.00005 0.000000000005 4 true 0.000078
0.00005 0.000000000005 8 false 0.000033
0.00005 0.000000000005 100 true 0.000068
0.00005 0.000000000005 1 false 0.0001
0.00004 0.000000000004 5 true 0.000044
0.00004 0.000000000004 12 false 0.00004
0.00004 0.000000000004 14 true 0.00004
0.00004 0.000000000004 8 false 0.000044


query RRIBR
select * from decimal_simple where c1 < 0.00003 order by c1 desc,c4;
----
0.00002 0.000000000002 3 false 0.000019
0.00002 0.000000000002 2 true 0.000025
0.00001 0.000000000001 1 true 0.000014


query IR
select count(*),c1 from decimal_simple group by c1 order by c1;
----
1 0.00001
2 0.00002
3 0.00003
4 0.00004
5 0.00005


query IRB
select count(*),c1,c4 from decimal_simple group by c1,c4 order by c1,c4;
----
1 0.00001 true
1 0.00002 false
1 0.00002 true
1 0.00003 false
2 0.00003 true
2 0.00004 false
2 0.00004 true
2 0.00005 false
3 0.00005 true


query TR
select arrow_typeof(cast(400420638.54 as decimal(12,2))), cast(400420638.54 as decimal(12,2));
----
Decimal128(12, 2) 400420638.54


query TR
select arrow_typeof(cast(400420638.54 as decimal(12,2)) * 1.0), cast(400420638.54 as decimal(12,2)) * 1.0;
----
Float64 400420638.54


query TB
select arrow_typeof(a < null), a < null from (values (1.1::decimal)) as t(a);
----
Boolean NULL


query TB
select arrow_typeof(null <= a), null <= a from (values (1.1::decimal)) as t(a);
----
Boolean NULL

query R
select try_cast(1234567 as decimal(7,3));
----
NULL
