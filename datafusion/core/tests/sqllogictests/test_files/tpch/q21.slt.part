
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

query TT
explain select
    s_name,
    count(*) as numwait
from
    supplier,
    lineitem l1,
    orders,
    nation
where
        s_suppkey = l1.l_suppkey
  and o_orderkey = l1.l_orderkey
  and o_orderstatus = 'F'
  and l1.l_receiptdate > l1.l_commitdate
  and exists (
        select
            *
        from
            lineitem l2
        where
                l2.l_orderkey = l1.l_orderkey
          and l2.l_suppkey <> l1.l_suppkey
    )
  and not exists (
        select
            *
        from
            lineitem l3
        where
                l3.l_orderkey = l1.l_orderkey
          and l3.l_suppkey <> l1.l_suppkey
          and l3.l_receiptdate > l3.l_commitdate
    )
  and s_nationkey = n_nationkey
  and n_name = 'SAUDI ARABIA'
group by
    s_name
order by
    numwait desc,
    s_name;
----
logical_plan
Sort: numwait DESC NULLS FIRST, supplier.s_name ASC NULLS LAST
--Projection: supplier.s_name, COUNT(UInt8(1)) AS numwait
----Aggregate: groupBy=[[supplier.s_name]], aggr=[[COUNT(UInt8(1))]]
------Projection: supplier.s_name
--------LeftAnti Join: l1.l_orderkey = __correlated_sq_2.l_orderkey Filter: __correlated_sq_2.l_suppkey != l1.l_suppkey
----------LeftSemi Join: l1.l_orderkey = __correlated_sq_1.l_orderkey Filter: __correlated_sq_1.l_suppkey != l1.l_suppkey
------------Projection: supplier.s_name, l1.l_orderkey, l1.l_suppkey
--------------Inner Join: supplier.s_nationkey = nation.n_nationkey
----------------Projection: supplier.s_name, supplier.s_nationkey, l1.l_orderkey, l1.l_suppkey
------------------Inner Join: l1.l_orderkey = orders.o_orderkey
--------------------Projection: supplier.s_name, supplier.s_nationkey, l1.l_orderkey, l1.l_suppkey
----------------------Inner Join: supplier.s_suppkey = l1.l_suppkey
------------------------TableScan: supplier projection=[s_suppkey, s_name, s_nationkey]
------------------------SubqueryAlias: l1
--------------------------Projection: lineitem.l_orderkey, lineitem.l_suppkey
----------------------------Filter: lineitem.l_receiptdate > lineitem.l_commitdate
------------------------------TableScan: lineitem projection=[l_orderkey, l_suppkey, l_commitdate, l_receiptdate], partial_filters=[lineitem.l_receiptdate > lineitem.l_commitdate]
--------------------Projection: orders.o_orderkey
----------------------Filter: orders.o_orderstatus = Utf8("F")
------------------------TableScan: orders projection=[o_orderkey, o_orderstatus], partial_filters=[orders.o_orderstatus = Utf8("F")]
----------------Projection: nation.n_nationkey
------------------Filter: nation.n_name = Utf8("SAUDI ARABIA")
--------------------TableScan: nation projection=[n_nationkey, n_name], partial_filters=[nation.n_name = Utf8("SAUDI ARABIA")]
------------SubqueryAlias: __correlated_sq_1
--------------SubqueryAlias: l2
----------------TableScan: lineitem projection=[l_orderkey, l_suppkey]
----------SubqueryAlias: __correlated_sq_2
------------SubqueryAlias: l3
--------------Projection: lineitem.l_orderkey, lineitem.l_suppkey
----------------Filter: lineitem.l_receiptdate > lineitem.l_commitdate
------------------TableScan: lineitem projection=[l_orderkey, l_suppkey, l_commitdate, l_receiptdate], partial_filters=[lineitem.l_receiptdate > lineitem.l_commitdate]
physical_plan
SortPreservingMergeExec: [numwait@1 DESC,s_name@0 ASC NULLS LAST]
--SortExec: expr=[numwait@1 DESC,s_name@0 ASC NULLS LAST]
----ProjectionExec: expr=[s_name@0 as s_name, COUNT(UInt8(1))@1 as numwait]
------AggregateExec: mode=FinalPartitioned, gby=[s_name@0 as s_name], aggr=[COUNT(UInt8(1))]
--------CoalesceBatchesExec: target_batch_size=8192
----------RepartitionExec: partitioning=Hash([s_name@0], 4), input_partitions=4
------------AggregateExec: mode=Partial, gby=[s_name@0 as s_name], aggr=[COUNT(UInt8(1))]
--------------ProjectionExec: expr=[s_name@0 as s_name]
----------------CoalesceBatchesExec: target_batch_size=8192
------------------HashJoinExec: mode=Partitioned, join_type=LeftAnti, on=[(l_orderkey@1, l_orderkey@0)], filter=l_suppkey@1 != l_suppkey@0
--------------------CoalesceBatchesExec: target_batch_size=8192
----------------------HashJoinExec: mode=Partitioned, join_type=LeftSemi, on=[(l_orderkey@1, l_orderkey@0)], filter=l_suppkey@1 != l_suppkey@0
------------------------CoalesceBatchesExec: target_batch_size=8192
--------------------------RepartitionExec: partitioning=Hash([l_orderkey@1], 4), input_partitions=4
----------------------------ProjectionExec: expr=[s_name@0 as s_name, l_orderkey@2 as l_orderkey, l_suppkey@3 as l_suppkey]
------------------------------CoalesceBatchesExec: target_batch_size=8192
--------------------------------HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_nationkey@1, n_nationkey@0)]
----------------------------------CoalesceBatchesExec: target_batch_size=8192
------------------------------------RepartitionExec: partitioning=Hash([s_nationkey@1], 4), input_partitions=4
--------------------------------------ProjectionExec: expr=[s_name@0 as s_name, s_nationkey@1 as s_nationkey, l_orderkey@2 as l_orderkey, l_suppkey@3 as l_suppkey]
----------------------------------------CoalesceBatchesExec: target_batch_size=8192
------------------------------------------HashJoinExec: mode=Partitioned, join_type=Inner, on=[(l_orderkey@2, o_orderkey@0)]
--------------------------------------------CoalesceBatchesExec: target_batch_size=8192
----------------------------------------------RepartitionExec: partitioning=Hash([l_orderkey@2], 4), input_partitions=4
------------------------------------------------ProjectionExec: expr=[s_name@1 as s_name, s_nationkey@2 as s_nationkey, l_orderkey@3 as l_orderkey, l_suppkey@4 as l_suppkey]
--------------------------------------------------CoalesceBatchesExec: target_batch_size=8192
----------------------------------------------------HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_suppkey@0, l_suppkey@1)]
------------------------------------------------------CoalesceBatchesExec: target_batch_size=8192
--------------------------------------------------------RepartitionExec: partitioning=Hash([s_suppkey@0], 4), input_partitions=4
----------------------------------------------------------RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1
------------------------------------------------------------CsvExec: file_groups={1 group: [[WORKSPACE_ROOT/datafusion/core/tests/sqllogictests/test_files/tpch/data/supplier.tbl]]}, projection=[s_suppkey, s_name, s_nationkey], has_header=false
------------------------------------------------------CoalesceBatchesExec: target_batch_size=8192
--------------------------------------------------------RepartitionExec: partitioning=Hash([l_suppkey@1], 4), input_partitions=4
----------------------------------------------------------ProjectionExec: expr=[l_orderkey@0 as l_orderkey, l_suppkey@1 as l_suppkey]
------------------------------------------------------------CoalesceBatchesExec: target_batch_size=8192
--------------------------------------------------------------FilterExec: l_receiptdate@3 > l_commitdate@2
----------------------------------------------------------------RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1
------------------------------------------------------------------CsvExec: file_groups={1 group: [[WORKSPACE_ROOT/datafusion/core/tests/sqllogictests/test_files/tpch/data/lineitem.tbl]]}, projection=[l_orderkey, l_suppkey, l_commitdate, l_receiptdate], has_header=false
--------------------------------------------CoalesceBatchesExec: target_batch_size=8192
----------------------------------------------RepartitionExec: partitioning=Hash([o_orderkey@0], 4), input_partitions=4
------------------------------------------------ProjectionExec: expr=[o_orderkey@0 as o_orderkey]
--------------------------------------------------CoalesceBatchesExec: target_batch_size=8192
----------------------------------------------------FilterExec: o_orderstatus@1 = F
------------------------------------------------------RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1
--------------------------------------------------------CsvExec: file_groups={1 group: [[WORKSPACE_ROOT/datafusion/core/tests/sqllogictests/test_files/tpch/data/orders.tbl]]}, projection=[o_orderkey, o_orderstatus], has_header=false
----------------------------------CoalesceBatchesExec: target_batch_size=8192
------------------------------------RepartitionExec: partitioning=Hash([n_nationkey@0], 4), input_partitions=4
--------------------------------------ProjectionExec: expr=[n_nationkey@0 as n_nationkey]
----------------------------------------CoalesceBatchesExec: target_batch_size=8192
------------------------------------------FilterExec: n_name@1 = SAUDI ARABIA
--------------------------------------------RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1
----------------------------------------------CsvExec: file_groups={1 group: [[WORKSPACE_ROOT/datafusion/core/tests/sqllogictests/test_files/tpch/data/nation.tbl]]}, projection=[n_nationkey, n_name], has_header=false
------------------------CoalesceBatchesExec: target_batch_size=8192
--------------------------RepartitionExec: partitioning=Hash([l_orderkey@0], 4), input_partitions=4
----------------------------RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1
------------------------------CsvExec: file_groups={1 group: [[WORKSPACE_ROOT/datafusion/core/tests/sqllogictests/test_files/tpch/data/lineitem.tbl]]}, projection=[l_orderkey, l_suppkey], has_header=false
--------------------CoalesceBatchesExec: target_batch_size=8192
----------------------RepartitionExec: partitioning=Hash([l_orderkey@0], 4), input_partitions=4
------------------------ProjectionExec: expr=[l_orderkey@0 as l_orderkey, l_suppkey@1 as l_suppkey]
--------------------------CoalesceBatchesExec: target_batch_size=8192
----------------------------FilterExec: l_receiptdate@3 > l_commitdate@2
------------------------------RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1
--------------------------------CsvExec: file_groups={1 group: [[WORKSPACE_ROOT/datafusion/core/tests/sqllogictests/test_files/tpch/data/lineitem.tbl]]}, projection=[l_orderkey, l_suppkey, l_commitdate, l_receiptdate], has_header=false



query TI
select
    s_name,
    count(*) as numwait
from
    supplier,
    lineitem l1,
    orders,
    nation
where
        s_suppkey = l1.l_suppkey
  and o_orderkey = l1.l_orderkey
  and o_orderstatus = 'F'
  and l1.l_receiptdate > l1.l_commitdate
  and exists (
        select
            *
        from
            lineitem l2
        where
                l2.l_orderkey = l1.l_orderkey
          and l2.l_suppkey <> l1.l_suppkey
    )
  and not exists (
        select
            *
        from
            lineitem l3
        where
                l3.l_orderkey = l1.l_orderkey
          and l3.l_suppkey <> l1.l_suppkey
          and l3.l_receiptdate > l3.l_commitdate
    )
  and s_nationkey = n_nationkey
  and n_name = 'SAUDI ARABIA'
group by
    s_name
order by
    numwait desc,
    s_name;
----
Supplier#000000445 16
Supplier#000000825 16
Supplier#000000709 15
Supplier#000000762 15
Supplier#000000357 14
Supplier#000000399 14
Supplier#000000496 14
Supplier#000000977 13
Supplier#000000144 12
Supplier#000000188 12
Supplier#000000415 12
Supplier#000000472 12
Supplier#000000633 12
Supplier#000000708 12
Supplier#000000889 12
Supplier#000000380 11
Supplier#000000602 11
Supplier#000000659 11
Supplier#000000821 11
Supplier#000000929 11
Supplier#000000262 10
Supplier#000000460 10
Supplier#000000486 10
Supplier#000000669 10
Supplier#000000718 10
Supplier#000000778 10
Supplier#000000167 9
Supplier#000000578 9
Supplier#000000673 9
Supplier#000000687 9
Supplier#000000074 8
Supplier#000000565 8
Supplier#000000648 8
Supplier#000000918 8
Supplier#000000427 7
Supplier#000000503 7
Supplier#000000610 7
Supplier#000000670 7
Supplier#000000811 7
Supplier#000000114 6
Supplier#000000379 6
Supplier#000000436 6
Supplier#000000500 6
Supplier#000000660 6
Supplier#000000788 6
Supplier#000000846 6
Supplier#000000920 4
