statement ok
CREATE TABLE t1 (a INTEGER, b INTEGER, c INTEGER);

statement ok
CREATE TABLE t2 (a INTEGER, b INTEGER, c INTEGER);

query TT
EXPLAIN SELECT COUNT() FROM (SELECT 1 AS a, 2 AS b) AS t;
----
logical_plan
01)Aggregate: groupBy=[[]], aggr=[[count(Int64(1)) AS count()]]
02)--SubqueryAlias: t
03)----EmptyRelation
physical_plan
01)ProjectionExec: expr=[1 as count()]
02)--PlaceholderRowExec


query TT
EXPLAIN SELECT t1.a, t1.b, t1.c
FROM t1
WHERE t1.a IN (
    SELECT COUNT()
    FROM t2
);
----
logical_plan
01)LeftSemi Join: CAST(t1.a AS Int64) = __correlated_sq_1.count()
02)--TableScan: t1 projection=[a, b, c]
03)--SubqueryAlias: __correlated_sq_1
04)----Aggregate: groupBy=[[]], aggr=[[count(Int64(1)) AS count()]]
05)------TableScan: t2 projection=[]
physical_plan
01)CoalesceBatchesExec: target_batch_size=8192
02)--HashJoinExec: mode=Partitioned, join_type=LeftSemi, on=[(CAST(t1.a AS Int64)@3, count()@0)], projection=[a@0, b@1, c@2]
03)----CoalesceBatchesExec: target_batch_size=8192
04)------RepartitionExec: partitioning=Hash([CAST(t1.a AS Int64)@3], 4), input_partitions=1
05)--------ProjectionExec: expr=[a@0 as a, b@1 as b, c@2 as c, CAST(a@0 AS Int64) as CAST(t1.a AS Int64)]
06)----------MemoryExec: partitions=1, partition_sizes=[0]
07)----CoalesceBatchesExec: target_batch_size=8192
08)------RepartitionExec: partitioning=Hash([count()@0], 4), input_partitions=1
09)--------ProjectionExec: expr=[0 as count()]
10)----------PlaceholderRowExec

query TT
EXPLAIN SELECT t1.a, COUNT() FROM t1 GROUP BY t1.a;
----
logical_plan
01)Aggregate: groupBy=[[t1.a]], aggr=[[count(Int64(1)) AS count()]]
02)--TableScan: t1 projection=[a]
physical_plan
01)AggregateExec: mode=FinalPartitioned, gby=[a@0 as a], aggr=[count()]
02)--CoalesceBatchesExec: target_batch_size=8192
03)----RepartitionExec: partitioning=Hash([a@0], 4), input_partitions=1
04)------AggregateExec: mode=Partial, gby=[a@0 as a], aggr=[count()]
05)--------MemoryExec: partitions=1, partition_sizes=[0]
