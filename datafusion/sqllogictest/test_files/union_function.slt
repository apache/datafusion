# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

##########
## UNION DataType Tests
##########

query ?I
select union_column, union_extract(union_column, 'int') from union_table;
----
{int=1} 1
{int=2} 2

query error DataFusion error: Execution error: field bool not found on union
select union_extract(union_column, 'bool') from union_table;

query error DataFusion error: Error during planning: 'union_extract' does not support zero arguments
select union_extract() from union_table;

query error DataFusion error: Error during planning: The function 'union_extract' expected 2 arguments but received 1
select union_extract(union_column) from union_table;

query error DataFusion error: Error during planning: The function 'union_extract' expected 2 arguments but received 1
select union_extract('a') from union_table;

query error DataFusion error: Execution error: union_extract first argument must be a union, got Utf8 instead
select union_extract('a', union_column) from union_table;

query error DataFusion error: Execution error: union_extract second argument must be a non\-null string literal, got Int64 instead
select union_extract(union_column, 1) from union_table;

query error DataFusion error: Error during planning: The function 'union_extract' expected 2 arguments but received 3
select union_extract(union_column, 'a', 'b') from union_table;
