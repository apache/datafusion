# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# This file contains IMDB test queries against a small sample dataset.
# The test creates tables with sample data and runs all the IMDB benchmark queries.

# company_type table
statement ok
CREATE TABLE company_type (
    id INT NOT NULL,
    kind VARCHAR NOT NULL
);

statement ok
INSERT INTO company_type VALUES
    (1, 'production companies'),
    (2, 'distributors'),
    (3, 'special effects companies'),
    (4, 'other companies'),
    (5, 'miscellaneous companies'),
    (6, 'film distributors'),
    (7, 'theaters'),
    (8, 'sales companies'),
    (9, 'producers'),
    (10, 'publishers'),
    (11, 'visual effects companies'),
    (12, 'makeup departments'),
    (13, 'costume designers'),
    (14, 'movie studios'),
    (15, 'sound departments'),
    (16, 'talent agencies'),
    (17, 'casting companies'),
    (18, 'film commissions'),
    (19, 'production services'),
    (20, 'digital effects studios');

# info_type table
statement ok
CREATE TABLE info_type (
    id INT NOT NULL,
    info VARCHAR NOT NULL
);

statement ok
INSERT INTO info_type VALUES
    (1, 'runtimes'),
    (2, 'color info'),
    (3, 'genres'),
    (4, 'languages'),
    (5, 'certificates'),
    (6, 'sound mix'),
    (7, 'countries'),
    (8, 'top 250 rank'),
    (9, 'bottom 10 rank'),
    (10, 'release dates'),
    (11, 'filming locations'),
    (12, 'production companies'),
    (13, 'technical info'),
    (14, 'trivia'),
    (15, 'goofs'),
    (16, 'martial-arts'),
    (17, 'quotes'),
    (18, 'movie connections'),
    (19, 'plot description'),
    (20, 'biography'),
    (21, 'plot summary'),
    (22, 'box office'),
    (23, 'ratings'),
    (24, 'taglines'),
    (25, 'keywords'),
    (26, 'soundtrack'),
    (27, 'votes'),
    (28, 'height'),
    (30, 'mini biography'),
    (31, 'budget'),
    (32, 'rating');

# title table
statement ok
CREATE TABLE title (
    id INT NOT NULL,
    title VARCHAR NOT NULL,
    imdb_index VARCHAR,
    kind_id INT NOT NULL,
    production_year INT,
    imdb_id INT,
    phonetic_code VARCHAR,
    episode_of_id INT,
    season_nr INT,
    episode_nr INT,
    series_years VARCHAR,
    md5sum VARCHAR
);

statement ok
INSERT INTO title VALUES
    (1, 'The Shawshank Redemption', NULL, 1, 1994, 111161, NULL, NULL, NULL, NULL, NULL, NULL),
    (2, 'The Godfather', NULL, 1, 1985, 68646, NULL, NULL, NULL, NULL, NULL, NULL),
    (3, 'The Dark Knight', NULL, 1, 2008, 468569, NULL, NULL, NULL, NULL, NULL, NULL),
    (4, 'The Godfather Part II', NULL, 1, 2012, 71562, NULL, NULL, NULL, NULL, NULL, NULL),
    (5, 'Pulp Fiction', NULL, 1, 1994, 110912, NULL, NULL, NULL, NULL, NULL, NULL),
    (6, 'Schindler''s List', NULL, 1, 1993, 108052, NULL, NULL, NULL, NULL, NULL, NULL),
    (7, 'The Lord of the Rings: The Return of the King', NULL, 1, 2003, 167260, NULL, NULL, NULL, NULL, NULL, NULL),
    (8, '12 Angry Men', NULL, 1, 1957, 50083, NULL, NULL, NULL, NULL, NULL, NULL),
    (9, 'Inception', NULL, 1, 2010, 1375666, NULL, NULL, NULL, NULL, NULL, NULL),
    (10, 'Fight Club', NULL, 1, 1999, 137523, NULL, NULL, NULL, NULL, NULL, NULL),
    (11, 'The Matrix', NULL, 1, 2014, 133093, NULL, NULL, NULL, NULL, NULL, NULL),
    (12, 'Goodfellas', NULL, 1, 1990, 99685, NULL, NULL, NULL, NULL, NULL, NULL),
    (13, 'Avengers: Endgame', NULL, 1, 2019, 4154796, NULL, NULL, NULL, NULL, NULL, NULL),
    (14, 'Interstellar', NULL, 1, 2014, 816692, NULL, NULL, NULL, NULL, NULL, NULL),
    (15, 'The Silence of the Lambs', NULL, 1, 1991, 102926, NULL, NULL, NULL, NULL, NULL, NULL),
    (16, 'Saving Private Ryan', NULL, 1, 1998, 120815, NULL, NULL, NULL, NULL, NULL, NULL),
    (17, 'The Green Mile', NULL, 1, 1999, 120689, NULL, NULL, NULL, NULL, NULL, NULL),
    (18, 'Forrest Gump', NULL, 1, 1994, 109830, NULL, NULL, NULL, NULL, NULL, NULL),
    (19, 'Joker', NULL, 1, 2019, 7286456, NULL, NULL, NULL, NULL, NULL, NULL),
    (20, 'Parasite', NULL, 1, 2019, 6751668, NULL, NULL, NULL, NULL, NULL, NULL),
    (21, 'The Iron Giant', NULL, 1, 1999, 129167, NULL, NULL, NULL, NULL, NULL, NULL),
    (22, 'Spider-Man: Into the Spider-Verse', NULL, 1, 2018, 4633694, NULL, NULL, NULL, NULL, NULL, NULL),
    (23, 'Iron Man', NULL, 1, 2008, 371746, NULL, NULL, NULL, NULL, NULL, NULL),
    (24, 'Black Panther', NULL, 1, 2018, 1825683, NULL, NULL, NULL, NULL, NULL, NULL),
    (25, 'Titanic', NULL, 1, 1997, 120338, NULL, NULL, NULL, NULL, NULL, NULL),
    (26, 'Kung Fu Panda 2', NULL, 1, 2011, 0441773, NULL, NULL, NULL, NULL, NULL, NULL),
    (27, 'Halloween', NULL, 1, 2008, 1311067, NULL, NULL, NULL, NULL, NULL, NULL),
    (28, 'Breaking Bad', NULL, 2, 2003, 903254, NULL, NULL, NULL, NULL, NULL, NULL),
    (29, 'Breaking Bad: The Final Season', NULL, 2, 2007, 903255, NULL, NULL, NULL, NULL, NULL, NULL),
    (30, 'Amsterdam Detective', NULL, 2, 2005, 905001, NULL, NULL, NULL, NULL, NULL, NULL),
    (31, 'Amsterdam Detective: Cold Case', NULL, 2, 2007, 905002, NULL, NULL, NULL, NULL, NULL, NULL),
    (32, 'Saw IV', NULL, 1, 2007, 905003, NULL, NULL, NULL, NULL, NULL, NULL),
    (33, 'Shrek 2', NULL, 1, 2004, 906001, NULL, NULL, NULL, NULL, NULL, NULL),
    (35, 'Dark Blood', NULL, 1, 2005, 907001, NULL, NULL, NULL, NULL, NULL, NULL),
    (36, 'The Nordic Murders', NULL, 1, 2008, 908002, NULL, NULL, NULL, NULL, NULL, NULL),
    (37, 'Scandinavian Crime', NULL, 1, 2009, 909001, NULL, NULL, NULL, NULL, NULL, NULL),
    (38, 'The Western Sequel', NULL, 1, 1998, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
    (39, 'Marvel Superhero Epic', NULL, 1, 2010, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
    (40, 'The Champion', NULL, 1, 2016, 999555, NULL, NULL, NULL, NULL, NULL, NULL),
    (41, 'Champion Boxer', NULL, 1, 2018, 999556, NULL, NULL, NULL, NULL, NULL, NULL),
    (42, 'Avatar', NULL, 5, 2010, 499549, NULL, NULL, NULL, NULL, NULL, NULL),
    (43, 'The Godfather Connection', NULL, 1, 1985, 68647, NULL, NULL, NULL, NULL, NULL, NULL),
    (44, 'Digital Connection', NULL, 1, 2005, 888999, NULL, NULL, NULL, NULL, NULL, NULL),
    (45, 'Berlin Noir', NULL, 1, 2010, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
    (46, 'YouTube Documentary', NULL, 1, 2008, 777999, NULL, NULL, NULL, NULL, NULL, NULL),
    (47, 'The Swedish Murder Case', NULL, 1, 2012, 666777, NULL, NULL, NULL, NULL, NULL, NULL),
    (48, 'Nordic Noir', NULL, 1, 2015, 555666, NULL, NULL, NULL, NULL, NULL, NULL),
    (49, 'Derek Jacobi Story', NULL, 1, 1982, 444555, NULL, NULL, NULL, NULL, NULL, NULL),
    (50, 'Woman in Black', NULL, 1, 2010, 987654, NULL, NULL, NULL, NULL, NULL, NULL),
    (51, 'Kung Fu Panda', NULL, 1, 2008, 441772, NULL, NULL, NULL, NULL, NULL, NULL),
    (52, 'Bruno', NULL, 1, 2009, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
    (53, 'Character Series', NULL, 2, 2020, 999888, NULL, NULL, NULL, 55, NULL, NULL),
    (54, 'Vampire Chronicles', NULL, 1, 2015, 999999, NULL, NULL, NULL, NULL, NULL, NULL),
    (55, 'Alien Invasion', NULL, 1, 2020, 888888, NULL, NULL, NULL, NULL, NULL, NULL),
    (56, 'Dragon Warriors', NULL, 1, 2015, 888889, NULL, NULL, NULL, NULL, NULL, NULL),
    (57, 'One Piece: Grand Adventure', NULL, 1, 2007, 777777, NULL, NULL, NULL, NULL, NULL, NULL),
    (58, 'Moscow Nights', NULL, 1, 2010, 777778, NULL, NULL, NULL, NULL, NULL, NULL),
    (59, 'Money Talks', NULL, 1, 1998, 888888, NULL, NULL, NULL, NULL, NULL, NULL),
    (60, 'Fox Novel Movie', NULL, 1, 2005, 777888, NULL, NULL, NULL, NULL, NULL, NULL),
    (61, 'Bad Movie Sequel', NULL, 1, 2010, 888777, NULL, NULL, NULL, NULL, NULL, NULL);

# movie_companies table
statement ok
CREATE TABLE movie_companies (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    company_id INT NOT NULL,
    company_type_id INT NOT NULL,
    note VARCHAR
);

statement ok
INSERT INTO movie_companies VALUES
    (1, 1, 4, 1, '(presents) (co-production)'),
    (2, 2, 5, 1, '(presents)'),
    (3, 3, 6, 1, '(co-production)'),
    (4, 4, 7, 1, '(as Metro-Goldwyn-Mayer Pictures)'),
    (5, 5, 8, 1, '(presents) (co-production)'),
    (6, 6, 9, 1, '(presents)'),
    (7, 7, 10, 1, '(co-production)'),
    (8, 8, 11, 2, '(distributor)'),
    (9, 9, 12, 1, '(presents) (co-production)'),
    (10, 10, 13, 1, '(presents)'),
    (11, 11, 14, 1, '(presents) (co-production)'),
    (12, 12, 15, 1, '(presents)'),
    (13, 13, 16, 1, '(co-production)'),
    (14, 14, 17, 1, '(presents)'),
    (15, 15, 18, 1, '(co-production)'),
    (16, 16, 19, 1, '(presents)'),
    (17, 17, 20, 1, '(co-production)'),
    (18, 18, 21, 1, '(presents)'),
    (19, 19, 22, 1, '(co-production)'),
    (20, 20, 23, 1, '(presents)'),
    (21, 21, 24, 1, '(presents) (co-production)'),
    (22, 22, 25, 1, '(presents)'),
    (23, 23, 26, 1, '(co-production)'),
    (24, 24, 27, 1, '(presents)'),
    (25, 25, 28, 1, '(presents) (co-production)'),
    (26, 3, 35, 1, '(as Warner Bros. Pictures)'),
    (27, 9, 35, 1, '(as Warner Bros. Pictures)'),
    (28, 23, 14, 1, '(as Marvel Studios)'),
    (29, 24, 14, 1, '(as Marvel Studios)'),
    (30, 13, 14, 1, '(as Marvel Studios)'),
    (31, 26, 23, 1, '(as DreamWorks Animation)'),
    (32, 3, 6, 2, '(distributor)'),
    (33, 2, 8, 2, '(distributor)'),
    (34, 3, 6, 1, '(as Warner Bros.) (2008) (USA) (worldwide)'),
    (35, 44, 36, 1, NULL),
    (36, 40, 9, 1, '(production) (USA) (2016)'),
    (37, 56, 18, 1, '(production)'),
    (38, 2, 6, 1, NULL),
    (39, 13, 14, 2, '(as Marvel Studios)'),
    (40, 19, 25, 1, '(co-production)'),
    (41, 23, 26, 1, '(co-production)'),
    (42, 19, 27, 1, '(co-production)'),
    (43, 11, 18, 1, '(theatrical) (France)'),
    (44, 11, 8, 1, '(VHS) (USA) (1994)'),
    (45, 11, 4, 1, '(USA)'),
    (46, 9, 28, 1, '(co-production)'),
    (47, 28, 5, 1, '(production)'),
    (48, 29, 5, 1, '(production)'),
    (49, 30, 29, 1, '(production)'),
    (50, 31, 30, 1, '(production)'),
    (51, 27, 22, 1, '(production)'),
    (52, 32, 22, 1, '(distribution) (Blu-ray)'),
    (53, 33, 31, 1, '(production)'),
    (54, 33, 31, 2, '(distribution)'),
    (55, 35, 32, 1, NULL),
    (56, 36, 33, 1, '(production) (2008)'),
    (57, 37, 34, 1, '(production) (2009) (Norway)'),
    (58, 38, 35, 1, NULL),
    (59, 25, 9, 1, '(production)'),
    (60, 52, 19, 1, NULL),
    (61, 26, 37, 1, '(voice: English version)'),
    (62, 21, 3, 1, '(production) (Japan) (anime)'),
    (63, 57, 2, 1, '(production) (Japan) (2007) (anime)'),
    (64, 58, 1, 1, '(production) (Russia) (2010)'),
    (65, 59, 35, 1, NULL),
    (66, 60, 13, 2, '(distribution) (DVD) (US)'),
    (67, 61, 14, 1, '(production)'),
    (68, 41, 9, 1, '(production) (USA) (2018)'),
    (69, 46, 16, 1, '(production) (2008) (worldwide)'),
    (70, 51, 31, 1, '(production) (2008) (USA) (worldwide)'),
    (71, 45, 32, 1, 'Studio (2000) Berlin'),
    (72, 53, 6, 1, '(production) (2020) (USA)'),
    (73, 62, 9, 1, '(production) (USA) (2010) (worldwide)');

# movie_info_idx table
statement ok
CREATE TABLE movie_info_idx (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    info_type_id INT NOT NULL,
    info VARCHAR NOT NULL,
    note VARCHAR
);

statement ok
INSERT INTO movie_info_idx VALUES
    (1, 1, 8, '1', NULL),
    (2, 2, 8, '2', NULL),
    (3, 3, 8, '3', NULL),
    (4, 4, 8, '4', NULL),
    (5, 5, 8, '5', NULL),
    (6, 6, 8, '6', NULL),
    (7, 7, 8, '7', NULL),
    (8, 8, 8, '8', NULL),
    (9, 9, 8, '9', NULL),
    (10, 10, 8, '10', NULL),
    (11, 11, 8, '11', NULL),
    (12, 12, 8, '12', NULL),
    (13, 13, 8, '13', NULL),
    (14, 14, 8, '14', NULL),
    (15, 15, 8, '15', NULL),
    (16, 16, 8, '16', NULL),
    (17, 17, 8, '17', NULL),
    (18, 18, 8, '18', NULL),
    (19, 19, 8, '19', NULL),
    (20, 20, 8, '20', NULL),
    (21, 21, 8, '21', NULL),
    (22, 22, 8, '22', NULL),
    (23, 23, 8, '23', NULL),
    (24, 24, 8, '24', NULL),
    (25, 25, 8, '25', NULL),
    (26, 40, 32, '8.6', NULL),
    (27, 41, 32, '7.5', NULL),
    (28, 45, 32, '6.8', NULL),
    (29, 45, 22, '$10,000,000', NULL),
    (30, 1, 22, '9.3', NULL),
    (31, 2, 22, '9.2', NULL),
    (32, 1, 27, '2,345,678', NULL),
    (33, 3, 22, '9.0', NULL),
    (34, 9, 22, '8.8', NULL),
    (35, 23, 22, '8.5', NULL),
    (36, 20, 9, '1', NULL),
    (37, 25, 9, '2', NULL),
    (38, 3, 9, '10', NULL),
    (39, 28, 32, '8.2', NULL),
    (40, 29, 32, '2.8', NULL),
    (41, 30, 32, '8.5', NULL),
    (42, 31, 32, '2.5', NULL),
    (43, 27, 27, '45000', NULL),
    (44, 32, 27, '52000', NULL),
    (45, 33, 27, '120000', NULL),
    (46, 35, 32, '7.2', NULL),
    (47, 36, 32, '7.8', NULL),
    (48, 37, 32, '7.5', NULL),
    (49, 37, 27, '100000', NULL),
    (50, 39, 32, '8.5', NULL),
    (51, 54, 27, '1000', NULL),
    (52, 3, 3002, '500', NULL),
    (53, 3, 999, '9.5', NULL),
    (54, 4, 999, '9.1', NULL),
    (55, 13, 999, '8.9', NULL),
    (56, 3, 32, '9.5', NULL),
    (57, 4, 32, '9.1', NULL),
    (58, 13, 32, '8.9', NULL),
    (59, 4, 32, '9.3', NULL),
    (60, 61, 9, '3', NULL),
    (61, 35, 22, '8.4', NULL),
    (62, 50, 32, '8.5', NULL),
    (63, 48, 32, '7.5', NULL),
    (64, 48, 27, '85000', NULL),
    (65, 47, 32, '7.8', NULL),
    (66, 46, 3, 'Documentary', NULL),
    (67, 46, 10, 'USA: 2008-05-15', 'internet release');

# movie_info table
statement ok
CREATE TABLE movie_info (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    info_type_id INT NOT NULL,
    info VARCHAR NOT NULL,
    note VARCHAR
);

statement ok
INSERT INTO movie_info VALUES
    (1, 1, 1, '113', NULL),
    (2, 4, 7, 'Germany', NULL),
    (3, 3, 7, 'Bulgaria', NULL),
    (4, 2, 1, '175', NULL),
    (5, 3, 1, '152', NULL),
    (6, 4, 1, '202', NULL),
    (7, 5, 1, '154', NULL),
    (8, 6, 1, '195', NULL),
    (9, 7, 1, '201', NULL),
    (10, 8, 1, '139', NULL),
    (11, 9, 1, '148', NULL),
    (12, 10, 1, '139', NULL),
    (13, 11, 1, '136', NULL),
    (14, 12, 1, '146', NULL),
    (15, 13, 1, '181', NULL),
    (16, 14, 1, '141', NULL),
    (17, 15, 1, '159', NULL),
    (18, 16, 1, '150', NULL),
    (19, 17, 1, '156', NULL),
    (20, 18, 1, '164', NULL),
    (21, 19, 1, '122', NULL),
    (22, 20, 1, '140', NULL),
    (23, 40, 1, '125', NULL),
    (24, 21, 1, '86', NULL),
    (25, 22, 1, '117', NULL),
    (26, 23, 1, '126', NULL),
    (27, 24, 1, '134', NULL),
    (28, 25, 1, '194', NULL),
    (29, 1, 10, '1994-10-14', 'internet release'),
    (30, 2, 10, '1972-03-24', 'internet release'),
    (31, 3, 10, '2008-07-18', 'internet release'),
    (32, 9, 10, '2010-07-16', 'internet release'),
    (33, 13, 10, '2019-04-26', 'internet release'),
    (34, 23, 10, '2008-05-02', 'internet release'),
    (35, 24, 10, '2018-02-16', 'internet release'),
    (36, 1, 2, 'Color', NULL),
    (37, 3, 2, 'Color', NULL),
    (38, 8, 2, 'Black and White', NULL),
    (39, 9, 2, 'Color', NULL),
    (40, 1, 19, 'Story about hope and redemption', NULL),
    (41, 3, 19, 'Batman faces his greatest challenge', NULL),
    (42, 19, 19, 'Origin story of the Batman villain', NULL),
    (43, 1, 3, 'Drama', NULL),
    (44, 3, 3, 'Action', NULL),
    (45, 3, 3, 'Crime', NULL),
    (46, 3, 3, 'Drama', NULL),
    (47, 9, 3, 'Action', NULL),
    (48, 9, 3, 'Adventure', NULL),
    (49, 9, 3, 'Sci-Fi', NULL),
    (50, 23, 3, 'Action', NULL),
    (51, 23, 3, 'Adventure', NULL),
    (52, 23, 3, 'Sci-Fi', NULL),
    (53, 24, 3, 'Action', NULL),
    (54, 24, 3, 'Adventure', NULL),
    (55, 9, 7, 'Germany', NULL),
    (56, 19, 7, 'German', NULL),
    (57, 24, 7, 'Germany', NULL),
    (58, 13, 7, 'USA', NULL),
    (59, 3, 7, 'USA', NULL),
    (60, 3, 22, '2343110', NULL),
    (61, 3, 27, '2343110', NULL),
    (62, 26, 10, 'USA:2011-05-26', NULL),
    (63, 19, 20, 'Batman faces his greatest challenge', NULL),
    (64, 3, 3, 'Drama', NULL),
    (65, 13, 3, 'Action', NULL),
    (66, 13, 19, 'Epic conclusion to the Infinity Saga', NULL),
    (67, 2, 8, '1972-03-24', 'Released via internet in 2001'),
    (68, 13, 4, 'English', NULL),
    (69, 13, 3, 'Animation', NULL),
    (70, 26, 3, 'Animation', NULL),
    (71, 27, 3, '$15 million', NULL),
    (72, 27, 3, 'Horror', NULL),
    (73, 32, 3, 'Horror', NULL),
    (74, 33, 10, 'USA: 2004', NULL),
    (75, 33, 3, 'Animation', NULL),
    (76, 35, 7, 'Germany', NULL),
    (77, 35, 10, '2005-09-15', NULL),
    (78, 44, 10, 'USA: 15 May 2005', 'This movie explores internet culture and digital connections that emerged in the early 2000s.'),
    (79, 40, 10, '2016-08-12', 'internet release'),
    (80, 1, 31, '$25,000,000', NULL),
    (81, 45, 7, 'Germany', NULL),
    (82, 45, 32, 'Germany', NULL),
    (83, 13, 32, '8.5', NULL),
    (84, 3, 32, '9.2', NULL),
    (85, 3, 102, '9.2', NULL),
    (86, 3, 25, 'sequel', NULL),
    (87, 3, 102, '9.2', NULL),
    (88, 3, 102, '9.2', NULL),
    (89, 4, 102, '9.5', NULL),
    (90, 33, 102, '8.7', NULL),
    (91, 4, 32, '9.5', NULL),
    (92, 11, 32, '8.7', NULL),
    (93, 3, 32, '9.2', NULL),
    (94, 3, 102, '9.2', NULL),
    (95, 3, 32, '9.0', NULL),
    (96, 26, 32, '8.2', NULL),
    (97, 26, 32, '8.5', NULL),
    (98, 27, 27, '8231', NULL),
    (99, 27, 10, '2008-10-31', NULL),
    (100, 13, 1, '182', NULL),
    (101, 11, 2, 'Germany', NULL),
    (102, 11, 1, '120', NULL),
    (103, 3, 3, 'Drama', NULL),
    (104, 11, 7, 'USA', NULL),
    (105, 11, 7, 'Bulgaria', NULL),
    (106, 50, 3, 'Horror', NULL),
    (107, 36, 7, 'Sweden', NULL),
    (108, 37, 7, 'Norway', NULL),
    (109, 38, 7, 'Sweden', NULL),
    (110, 54, 3, 'Horror', NULL),
    (111, 55, 3, 'Sci-Fi', NULL),
    (112, 56, 30, 'Japan:2015-06-15', NULL),
    (113, 56, 30, 'USA:2015-07-20', NULL),
    (114, 26, 10, 'Japan:2011-05-29', NULL),
    (115, 26, 10, 'USA:2011-05-26', NULL),
    (116, 61, 31, '$500,000', NULL),
    (117, 41, 10, '2018-05-25', 'USA theatrical release'),
    (118, 41, 7, 'Germany', 'Filmed on location'),
    (119, 48, 7, 'Sweden', 'Filmed on location'),
    (120, 48, 10, '2015-06-15', 'theatrical release'),
    (121, 48, 3, 'Thriller', NULL),
    (122, 47, 7, 'Sweden', 'Principal filming location'),
    (123, 47, 10, '2012-09-21', 'theatrical release'),
    (124, 47, 3, 'Crime', NULL),
    (125, 47, 3, 'Thriller', NULL),
    (126, 47, 7, 'Sweden', NULL),
    (127, 3, 10, 'USA: 2008-07-14', 'internet release'),
    (128, 46, 10, 'USA: 2008-05-15', 'internet release'),
    (129, 40, 10, 'USA:\ 2006', 'internet release'),
    (130, 51, 10, 'USA: 2008-06-06', 'theatrical release'),
    (131, 51, 10, 'Japan: 2007-12-20', 'preview screening');

# kind_type table
statement ok
CREATE TABLE kind_type (
    id INT NOT NULL,
    kind VARCHAR NOT NULL
);

statement ok
INSERT INTO kind_type VALUES
    (1, 'movie'),
    (2, 'tv series'),
    (3, 'video movie'),
    (4, 'tv movie'),
    (5, 'video game'),
    (6, 'episode'),
    (7, 'documentary'),
    (8, 'short movie'),
    (9, 'tv mini series'),
    (10, 'reality-tv');

# cast_info table
statement ok
CREATE TABLE cast_info (
    id INT NOT NULL,
    person_id INT NOT NULL,
    movie_id INT NOT NULL,
    person_role_id INT,
    note VARCHAR,
    nr_order INT,
    role_id INT NOT NULL
);

statement ok
INSERT INTO cast_info VALUES
    (1, 29, 53, NULL, NULL, 1, 1),
    (2, 3, 1, 54, NULL, 1, 1),
    (3, 3, 1, NULL, '(producer)', 1, 3),
    (4, 4, 2, 2, NULL, 1, 1),
    (5, 5, 3, 3, NULL, 1, 1),
    (6, 6, 4, 4, NULL, 1, 1),
    (7, 2, 50, NULL, '(writer)', 1, 4),
    (8, 18, 51, 15, '(voice)', 1, 2),
    (9, 1, 19, NULL, NULL, 1, 1),
    (10, 6, 100, 1985, '(as Special Actor)', 1, 1),
    (11, 15, 19, NULL, NULL, 1, 1),
    (12, 8, 5, 5, NULL, 1, 1),
    (13, 9, 6, 6, NULL, 1, 1),
    (14, 10, 7, 7, NULL, 1, 1),
    (15, 11, 8, 8, NULL, 1, 1),
    (16, 12, 9, 9, NULL, 1, 1),
    (17, 13, 10, 10, NULL, 1, 1),
    (18, 14, 9, 55, NULL, 1, 1),
    (19, 14, 14, 29, NULL, 1, 1),
    (20, 27, 58, 28, '(producer)', 1, 1),
    (21, 16, 3, 23, '(producer)', 2, 1),
    (22, 20, 49, NULL, NULL, 1, 1),
    (23, 13, 23, 14, NULL, 1, 1),
    (24, 28, 13, NULL, '(costume design)', 1, 7),
    (25, 25, 58, 31, '(voice) (uncredited)', 1, 1),
    (26, 18, 3, 24, '(voice)', 1, 2),
    (27, 29, 26, 24, '(voice)', 1, 2),
    (28, 13, 13, 47, '(writer)', 1, 1),
    (29, 17, 3, 25, '(producer)', 3, 8),
    (30, 18, 3, 11, '(voice)', 1, 2),
    (31, 18, 26, 11, '(voice)', 1, 2),
    (32, 18, 26, 12, '(voice: original film)', 1, 2),
    (33, 22, 27, 12, '(writer)', 4, 8),
    (34, 23, 32, 12, '(writer)', 4, 8),
    (35, 21, 33, 13, '(voice)', 2, 2),
    (36, 21, 33, 13, '(voice: English version)', 2, 2),
    (37, 21, 33, 13, '(voice) (uncredited)', 2, 2),
    (38, 22, 39, 25, 'Superman', 1, 1),
    (39, 22, 39, 26, 'Ironman', 1, 1),
    (40, 22, 39, 27, 'Spiderman', 1, 1),
    (41, 19, 52, NULL, NULL, 2, 1),
    (42, 14, 19, NULL, NULL, 3, 1),
    (43, 6, 2, 2, NULL, 1, 1),
    (44, 16, 54, NULL, '(writer)', 1, 4),
    (45, 24, 55, NULL, '(director)', 1, 8),
    (46, 25, 56, 29, '(voice: English version)', 1, 2),
    (47, 18, 26, 30, '(voice: English version)', 1, 2),
    (48, 26, 21, 24, '(voice: English version)', 1, 2),
    (49, 26, 57, 25, '(voice: English version)', 1, 2),
    (50, 27, 25, NULL, NULL, 1, 4),
    (51, 18, 62, 32, '(voice)', 1, 2);

# char_name table
statement ok
CREATE TABLE char_name (
    id INT NOT NULL,
    name VARCHAR NOT NULL,
    imdb_index VARCHAR,
    imdb_id INT,
    name_pcode_nf VARCHAR,
    surname_pcode VARCHAR,
    md5sum VARCHAR
);

statement ok
INSERT INTO char_name VALUES
    (1, 'Andy Dufresne', NULL, NULL, NULL, NULL, NULL),
    (2, 'Don Vito Corleone', NULL, NULL, NULL, NULL, NULL),
    (3, 'Joker', NULL, NULL, NULL, NULL, NULL),
    (4, 'Michael Corleone', NULL, NULL, NULL, NULL, NULL),
    (5, 'Vincent Vega', NULL, NULL, NULL, NULL, NULL),
    (6, 'Oskar Schindler', NULL, NULL, NULL, NULL, NULL),
    (7, 'Gandalf', NULL, NULL, NULL, NULL, NULL),
    (8, 'Juror 8', NULL, NULL, NULL, NULL, NULL),
    (9, 'Cobb', NULL, NULL, NULL, NULL, NULL),
    (10, 'Tyler Durden', NULL, NULL, NULL, NULL, NULL),
    (11, 'Batman''s Assistant', NULL, NULL, NULL, NULL, NULL),
    (12, 'Tiger', NULL, NULL, NULL, NULL, NULL),
    (13, 'Queen', NULL, NULL, NULL, NULL, NULL),
    (14, 'Iron Man', NULL, NULL, NULL, NULL, NULL),
    (15, 'Master Tigress', NULL, NULL, NULL, NULL, NULL),
    (16, 'Dom Cobb', NULL, NULL, NULL, NULL, NULL),
    (17, 'Rachel Dawes', NULL, NULL, NULL, NULL, NULL),
    (18, 'Arthur Fleck', NULL, NULL, NULL, NULL, NULL),
    (19, 'Pepper Potts', NULL, NULL, NULL, NULL, NULL),
    (20, 'T''Challa', NULL, NULL, NULL, NULL, NULL),
    (21, 'Steve Rogers', NULL, NULL, NULL, NULL, NULL),
    (22, 'Ellis Boyd Redding', NULL, NULL, NULL, NULL, NULL),
    (23, 'Bruce Wayne', NULL, NULL, NULL, NULL, NULL),
    (24, 'Tigress', NULL, NULL, NULL, NULL, NULL),
    (25, 'Superman', NULL, NULL, NULL, NULL, NULL),
    (26, 'Ironman', NULL, NULL, NULL, NULL, NULL),
    (27, 'Spiderman', NULL, NULL, NULL, NULL, NULL),
    (28, 'Director', NULL, NULL, NULL, NULL, NULL),
    (29, 'Tiger Warrior', NULL, NULL, NULL, NULL, NULL),
    (30, 'Tigress', NULL, NULL, NULL, NULL, NULL),
    (31, 'Nikolai', NULL, NULL, NULL, NULL, NULL),
    (32, 'Princess Dragon', NULL, NULL, NULL, NULL, NULL);

# keyword table
statement ok
CREATE TABLE keyword (
    id INT NOT NULL,
    keyword VARCHAR NOT NULL,
    phonetic_code VARCHAR
);

statement ok
INSERT INTO keyword VALUES
    (1, 'prison', NULL),
    (2, 'mafia', NULL),
    (3, 'superhero', NULL),
    (4, 'sequel', NULL),
    (5, 'crime', NULL),
    (6, 'holocaust', NULL),
    (7, 'fantasy', NULL),
    (8, 'jury', NULL),
    (9, 'dream', NULL),
    (10, 'fight', NULL),
    (11, 'marvel-cinematic-universe', NULL),
    (12, 'character-name-in-title', NULL),
    (13, 'female-name-in-title', NULL),
    (14, 'murder', NULL),
    (15, 'noir', NULL),
    (16, 'space', NULL), 
    (17, 'time-travel', NULL),
    (18, 'artificial-intelligence', NULL),
    (19, 'robot', NULL),
    (20, 'alien', NULL),
    (21, '10,000-mile-club', NULL),
    (22, 'martial-arts', NULL),
    (23, 'computer-animation', NULL),
    (24, 'violence', NULL),
    (25, 'based-on-novel', NULL),
    (26, 'nerd', NULL),
    (27, 'marvel-comics', NULL),
    (28, 'based-on-comic', NULL),
    (29, 'superhero-movie', NULL);

# movie_keyword table
statement ok
CREATE TABLE movie_keyword (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    keyword_id INT NOT NULL
);

statement ok
INSERT INTO movie_keyword VALUES
    (1, 1, 1),
    (2, 2, 2),
    (3, 3, 3),
    (4, 4, 4),
    (5, 5, 5),
    (6, 6, 6),
    (7, 7, 7),
    (8, 8, 8),
    (9, 9, 9),
    (10, 10, 10),
    (11, 3, 5),
    (12, 19, 3),
    (13, 19, 12),
    (14, 23, 11),
    (15, 13, 11),
    (16, 24, 11),
    (17, 11, 1),
    (18, 11, 20),
    (19, 11, 20),
    (20, 14, 16),
    (21, 9, 3),
    (22, 3, 14),
    (23, 25, 13),
    (24, 23, 12),
    (25, 2, 4),
    (26, 23, 19),
    (27, 19, 5),
    (28, 23, 3),
    (29, 23, 28),
    (30, 3, 4),
    (31, 3, 4),
    (32, 2, 4),
    (33, 4, 4),
    (34, 11, 4),
    (35, 3, 3),
    (36, 26, 16),
    (37, 13, 11),
    (38, 13, 3),
    (39, 13, 4),
    (40, 9, 17),
    (41, 9, 18),
    (42, 3, 12),
    (43, 13, 13),
    (44, 26, 21),
    (45, 24, 3),
    (46, 9, 14),
    (47, 2, 4),
    (48, 14, 21),
    (49, 27, 14),
    (50, 32, 14),
    (51, 33, 23),
    (52, 33, 23),
    (55, 35, 24),
    (56, 36, 14),
    (57, 36, 25),
    (58, 35, 4),
    (59, 37, 14),
    (60, 37, 25),
    (61, 45, 24),
    (62, 2, 4),
    (63, 14, 21),
    (64, 27, 14),
    (65, 32, 14),
    (66, 33, 23),
    (67, 33, 23),
    (68, 35, 24),
    (69, 38, 4),
    (70, 39, 3),
    (71, 39, 27),
    (72, 39, 28),
    (73, 39, 29),
    (74, 44, 26),
    (75, 52, 12),
    (76, 54, 14),
    (77, 55, 20),
    (78, 55, 16),
    (79, 56, 22),
    (80, 26, 22),
    (81, 3, 4),
    (82, 4, 4),
    (83, 13, 4),
    (84, 3, 4),
    (85, 40, 29),
    (86, 4, 4),
    (87, 13, 4),
    (88, 59, 4),
    (89, 60, 25),
    (90, 48, 14),
    (91, 47, 14),
    (92, 45, 24),
    (93, 46, 3),
    (94, 53, 12);

# company_name table
statement ok
CREATE TABLE company_name (
    id INT NOT NULL,
    name VARCHAR NOT NULL,
    country_code VARCHAR,
    imdb_id INT,
    name_pcode_nf VARCHAR,
    name_pcode_sf VARCHAR,
    md5sum VARCHAR
);

statement ok
INSERT INTO company_name VALUES
    (1, 'Mosfilm', '[ru]', NULL, NULL, NULL, NULL),
    (2, 'Toei Animation', '[jp]', NULL, NULL, NULL, NULL),
    (3, 'Tokyo Animation Studio', '[jp]', NULL, NULL, NULL, NULL),
    (4, 'Castle Rock Entertainment', '[us]', NULL, NULL, NULL, NULL),
    (5, 'Paramount Pictures', '[us]', NULL, NULL, NULL, NULL),
    (6, 'Warner Bros.', '[us]', NULL, NULL, NULL, NULL),
    (7, 'Metro-Goldwyn-Mayer', '[us]', NULL, NULL, NULL, NULL),
    (8, 'Miramax Films', '[us]', NULL, NULL, NULL, NULL),
    (9, 'Universal Pictures', '[us]', NULL, NULL, NULL, NULL),
    (10, 'New Line Cinema', '[us]', NULL, NULL, NULL, NULL),
    (11, 'United Artists', '[us]', NULL, NULL, NULL, NULL),
    (12, 'Columbia Pictures', '[us]', NULL, NULL, NULL, NULL),
    (13, 'Twentieth Century Fox', '[us]', NULL, NULL, NULL, NULL),
    (14, 'Marvel Studios', '[us]', NULL, NULL, NULL, NULL),
    (15, 'DC Films', '[us]', NULL, NULL, NULL, NULL),
    (16, 'YouTube', '[us]', NULL, NULL, NULL, NULL),
    (17, 'DreamWorks Pictures', '[us]', NULL, NULL, NULL, NULL),
    (18, 'Walt Disney Pictures', '[us]', NULL, NULL, NULL, NULL),
    (19, 'Netflix', '[us]', NULL, NULL, NULL, NULL),
    (20, 'Amazon Studios', '[us]', NULL, NULL, NULL, NULL),
    (21, 'A24', '[us]', NULL, NULL, NULL, NULL),
    (22, 'Lionsgate Films', '[us]', NULL, NULL, NULL, NULL),
    (23, 'DreamWorks Animation', '[us]', NULL, NULL, NULL, NULL),
    (24, 'Sony Pictures', '[us]', NULL, NULL, NULL, NULL),
    (25, 'Bavaria Film', '[de]', NULL, NULL, NULL, NULL),
    (26, 'Dutch FilmWorks', '[nl]', NULL, NULL, NULL, NULL),
    (27, 'San Marino Films', '[sm]', NULL, NULL, NULL, NULL),
    (28, 'Legendary Pictures', '[us]', NULL, NULL, NULL, NULL),
    (29, 'Dutch Entertainment Group', '[nl]', NULL, NULL, NULL, NULL),
    (30, 'Amsterdam Studios', '[nl]', NULL, NULL, NULL, NULL),
    (31, 'DreamWorks Animation', '[us]', NULL, NULL, NULL, NULL),
    (32, 'Berlin Film Studio', '[de]', NULL, NULL, NULL, NULL),
    (33, 'Stockholm Productions', '[se]', NULL, NULL, NULL, NULL),
    (34, 'Oslo Films', '[no]', NULL, NULL, NULL, NULL),
    (35, 'Warner Bros. Pictures', '[us]', NULL, NULL, NULL, NULL),
    (36, 'Silicon Entertainment', '[us]', NULL, NULL, NULL, NULL),
    (37, 'DreamWorks Animation', '[us]', NULL, NULL, NULL, NULL);

# name table for actors/directors information
statement ok
CREATE TABLE name (
    id INT NOT NULL,
    name VARCHAR NOT NULL,
    imdb_index VARCHAR,
    imdb_id INT,
    gender VARCHAR,
    name_pcode_cf VARCHAR,
    name_pcode_nf VARCHAR,
    surname_pcode VARCHAR,
    md5sum VARCHAR
);

statement ok
INSERT INTO name VALUES
    (1, 'Xavier Thompson', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (2, 'Susan Hill', NULL, NULL, 'f', NULL, NULL, NULL, NULL),
    (3, 'Tim Robbins', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (4, 'Marlon Brando', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (5, 'Heath Ledger', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (6, 'Al Pacino', NULL, NULL, 'm', 'A', NULL, NULL, NULL),
    (7, 'Downey Pacino', NULL, NULL, 'm', 'D', NULL, NULL, NULL),
    (8, 'John Travolta', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (9, 'Liam Neeson', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (10, 'Ian McKellen', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (11, 'Henry Fonda', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (12, 'Leonardo DiCaprio', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (13, 'Downey Robert Jr.', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (14, 'Zach Wilson', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (15, 'Bert Wilson', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (29, 'Alex Morgan', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (16, 'Christian Bale', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (17, 'Christopher Nolan', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (18, 'Angelina Jolie', NULL, NULL, 'f', NULL, NULL, NULL, NULL),
    (19, 'Brad Wilson', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (20, 'Derek Jacobi', NULL, NULL, 'm', 'D624', NULL, NULL, NULL),
    (21, 'Anne Hathaway', NULL, NULL, 'f', NULL, NULL, NULL, NULL),
    (22, 'John Carpenter', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (23, 'James Wan', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (24, 'Ridley Scott', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (25, 'Angelina Jolie', NULL, NULL, 'f', NULL, NULL, NULL, NULL),
    (26, 'Yoko Tanaka', NULL, NULL, 'f', NULL, NULL, NULL, NULL),
    (27, 'James Cameron', NULL, NULL, 'm', NULL, NULL, NULL, NULL),
    (28, 'Edith Head', NULL, NULL, 'f', NULL, NULL, NULL, NULL),
    (29, 'Anne Hathaway', NULL, NULL, 'f', NULL, NULL, NULL, NULL);

# aka_name table
statement ok
CREATE TABLE aka_name (
    id INT NOT NULL,
    person_id INT NOT NULL,
    name VARCHAR NOT NULL,
    imdb_index VARCHAR,
    name_pcode_cf VARCHAR,
    name_pcode_nf VARCHAR,
    surname_pcode VARCHAR,
    md5sum VARCHAR
);

statement ok
INSERT INTO aka_name VALUES
    (1, 2, 'Marlon Brando Jr.', NULL, NULL, NULL, NULL, NULL),
    (2, 2, 'Marlon Brando', NULL, NULL, NULL, NULL, NULL),
    (3, 3, 'Heath Andrew Ledger', NULL, NULL, NULL, NULL, NULL),
    (4, 6, 'Alfredo James Pacino', NULL, NULL, NULL, NULL, NULL),
    (5, 5, 'John Joseph Travolta', NULL, NULL, NULL, NULL, NULL),
    (6, 6, 'Liam John Neeson', NULL, NULL, NULL, NULL, NULL),
    (7, 7, 'Ian Murray McKellen', NULL, NULL, NULL, NULL, NULL),
    (8, 8, 'Henry Jaynes Fonda', NULL, NULL, NULL, NULL, NULL),
    (9, 9, 'Leonardo Wilhelm DiCaprio', NULL, NULL, NULL, NULL, NULL),
    (10, 10, 'Robert John Downey Jr.', NULL, NULL, NULL, NULL, NULL),
    (11, 16, 'Christian Charles Philip Bale', NULL, NULL, NULL, NULL, NULL),
    (12, 29, 'Christopher Jonathan James Nolan', NULL, NULL, NULL, NULL, NULL),
    (13, 47, 'Joaquin Rafael Bottom', NULL, NULL, NULL, NULL, NULL),
    (14, 26, 'Yoko Shimizu', NULL, NULL, NULL, NULL, NULL),
    (15, 48, 'Chadwick Aaron Boseman', NULL, NULL, NULL, NULL, NULL),
    (16, 29, 'Scarlett Ingrid Johansson', NULL, NULL, NULL, NULL, NULL),
    (17, 31, 'Christopher Robert Evans', NULL, NULL, NULL, NULL, NULL),
    (18, 32, 'Christopher Hemsworth', NULL, NULL, NULL, NULL, NULL),
    (19, 33, 'Mark Alan Ruffalo', NULL, NULL, NULL, NULL, NULL),
    (20, 20, 'Sir Derek Jacobi', NULL, NULL, NULL, NULL, NULL),
    (21, 34, 'Samuel Leroy Jackson', NULL, NULL, NULL, NULL, NULL),
    (22, 35, 'Gwyneth Kate Paltrow', NULL, NULL, NULL, NULL, NULL),
    (23, 36, 'Thomas William Hiddleston', NULL, NULL, NULL, NULL, NULL),
    (24, 37, 'Morgan Porterfield Freeman', NULL, NULL, NULL, NULL, NULL),
    (25, 38, 'William Bradley Pitt', NULL, NULL, NULL, NULL, NULL),
    (26, 39, 'Edward John Norton Jr.', NULL, NULL, NULL, NULL, NULL),
    (27, 40, 'Marion Cotillard', NULL, NULL, NULL, NULL, NULL),
    (28, 41, 'Joseph Leonard Gordon-Levitt', NULL, NULL, NULL, NULL, NULL),
    (29, 42, 'Matthew David McConaughey', NULL, NULL, NULL, NULL, NULL),
    (30, 43, 'Anne Jacqueline Hathaway', NULL, NULL, NULL, NULL, NULL),
    (31, 44, 'Kevin Feige', NULL, NULL, NULL, NULL, NULL),
    (32, 45, 'Margaret Ruth Gyllenhaal', NULL, NULL, NULL, NULL, NULL),
    (33, 46, 'Kate Elizabeth Winslet', NULL, NULL, NULL, NULL, NULL),
    (34, 28, 'E. Head', NULL, NULL, NULL, NULL, NULL),
    (35, 29, 'Anne Jacqueline Hathaway', NULL, NULL, NULL, NULL, NULL),
    (36, 29, 'Alexander Morgan', NULL, NULL, NULL, NULL, NULL),
    (37, 2, 'Brando, M.', NULL, NULL, NULL, NULL, NULL),
    (38, 21, 'Annie Hathaway', NULL, NULL, NULL, NULL, NULL),
    (39, 21, 'Annie H', NULL, NULL, NULL, NULL, NULL),
    (40, 25, 'Angie Jolie', NULL, NULL, NULL, NULL, NULL),
    (41, 27, 'Jim Cameron', NULL, NULL, NULL, NULL, NULL),
    (42, 18, 'Angelina Jolie', NULL, NULL, NULL, NULL, NULL);

# role_type table
statement ok
CREATE TABLE role_type (
    id INT NOT NULL,
    role VARCHAR NOT NULL
);

statement ok
INSERT INTO role_type VALUES
    (1, 'actor'),
    (2, 'actress'),
    (3, 'producer'),
    (4, 'writer'),
    (5, 'cinematographer'),
    (6, 'composer'),
    (7, 'costume designer'),
    (8, 'director'),
    (9, 'editor'),
    (10, 'miscellaneous crew');

# link_type table
statement ok
CREATE TABLE link_type (
    id INT NOT NULL,
    link VARCHAR NOT NULL
);

statement ok
INSERT INTO link_type VALUES
    (1, 'sequel'),
    (2, 'follows'),
    (3, 'remake of'),
    (4, 'version of'),
    (5, 'spin off from'),
    (6, 'reference to'),
    (7, 'featured in'),
    (8, 'spoofed in'),
    (9, 'edited into'),
    (10, 'alternate language version of'),
    (11, 'features');

# movie_link table
statement ok
CREATE TABLE movie_link (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    linked_movie_id INT NOT NULL,
    link_type_id INT NOT NULL
);

statement ok
INSERT INTO movie_link VALUES
    (1, 2, 4, 1),
    (2, 3, 5, 6),
    (3, 6, 7, 4),
    (4, 8, 9, 8),
    (5, 10, 1, 3),
    (6, 28, 29, 1),
    (7, 30, 31, 2),
    (8, 1, 3, 6),
    (9, 23, 13, 1),
    (10, 13, 24, 2),
    (11, 20, 3, 1),
    (12, 3, 22, 1),
    (13, 2, 4, 2),
    (14, 19, 19, 6),
    (15, 14, 16, 6),
    (16, 13, 23, 2),
    (17, 25, 9, 4),
    (18, 17, 1, 8),
    (19, 24, 23, 2),
    (20, 21, 22, 1),
    (21, 15, 9, 6),
    (22, 11, 13, 1),
    (23, 13, 11, 2),
    (24, 100, 100, 7),
    (25, 1, 2, 7),
    (26, 23, 2, 7),
    (27, 14, 25, 9),
    (28, 4, 6, 4),
    (29, 5, 8, 6),
    (30, 7, 10, 6),
    (31, 9, 2, 8),
    (32, 38, 39, 2),
    (33, 59, 5, 2),
    (34, 60, 9, 2),
    (35, 49, 49, 11),
    (36, 35, 36, 2);

# complete_cast table
statement ok
CREATE TABLE complete_cast (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    subject_id INT NOT NULL,
    status_id INT NOT NULL
);

statement ok
INSERT INTO complete_cast VALUES
    (1, 1, 1, 1),
    (2, 2, 1, 1),
    (3, 3, 1, 1),
    (4, 4, 1, 1),
    (5, 5, 1, 1),
    (6, 6, 1, 1),
    (7, 7, 1, 1),
    (8, 8, 1, 1),
    (9, 9, 1, 1),
    (10, 10, 1, 1),
    (11, 11, 1, 1),
    (12, 12, 1, 1),
    (13, 13, 1, 1),
    (14, 14, 1, 1),
    (15, 15, 1, 1),
    (16, 16, 1, 1),
    (17, 17, 1, 1),
    (18, 18, 1, 1),
    (19, 19, 1, 2),
    (20, 20, 2, 1),
    (21, 21, 1, 1),
    (22, 22, 1, 1),
    (23, 23, 1, 3),
    (24, 24, 1, 1),
    (25, 25, 1, 1),
    (26, 26, 1, 1),
    (27, 13, 2, 4),
    (28, 44, 1, 4),
    (29, 33, 1, 4),
    (30, 31, 1, 1),
    (31, 32, 1, 4),
    (32, 33, 1, 4),
    (33, 35, 2, 3),
    (34, 36, 2, 3),
    (35, 37, 1, 4),
    (36, 37, 1, 3),
    (37, 38, 1, 3),
    (38, 39, 1, 3),
    (39, 39, 1, 11),
    (40, 40, 1, 4);

# comp_cast_type table
statement ok
CREATE TABLE comp_cast_type (
    id INT NOT NULL,
    kind VARCHAR NOT NULL
);

statement ok
INSERT INTO comp_cast_type VALUES
    (1, 'cast'),
    (2, 'crew'),
    (3, 'complete'),
    (4, 'complete+verified'),
    (5, 'pending'),
    (6, 'unverified'),
    (7, 'uncredited cast'),
    (8, 'uncredited crew'),
    (9, 'unverified cast'),
    (10, 'unverified crew'),
    (11, 'complete cast');

# person_info table
statement ok
CREATE TABLE person_info (
    id INT NOT NULL,
    person_id INT NOT NULL,
    info_type_id INT NOT NULL,
    info VARCHAR NOT NULL,
    note VARCHAR
);

statement ok
INSERT INTO person_info VALUES
    (1, 1, 3, 'actor,producer', NULL),
    (2, 2, 3, 'actor,director', NULL),
    (3, 3, 3, 'actor', NULL),
    (4, 6, 3, 'actor,producer', NULL),
    (5, 5, 3, 'actor', NULL),
    (6, 6, 3, 'actor', NULL),
    (7, 7, 3, 'actor', NULL),
    (8, 8, 3, 'actor', NULL),
    (9, 20, 30, 'Renowned Shakespearean actor and stage performer', 'Volker Boehm'),
    (10, 10, 3, 'actor,producer', 'marvel-cinematic-universe'),
    (11, 3, 1, 'Won Academy Award for portrayal of Joker', NULL),
    (12, 10, 1, 'Played Iron Man in the Marvel Cinematic Universe', NULL),
    (13, 16, 3, 'actor', NULL),
    (14, 16, 1, 'Played Batman in The Dark Knight trilogy', NULL),
    (15, 29, 3, 'director,producer,writer', NULL),
    (16, 29, 1, 'Directed The Dark Knight trilogy', NULL),
    (17, 47, 3, 'actor', NULL),
    (18, 47, 1, 'Won Academy Award for portrayal of Joker', NULL),
    (19, 48, 3, 'actor', NULL),
    (20, 48, 1, 'Played Black Panther in the Marvel Cinematic Universe', NULL),
    (21, 29, 3, 'actress', NULL),
    (22, 29, 1, 'Played Black Widow in the Marvel Cinematic Universe', NULL),
    (23, 31, 3, 'actor', NULL),
    (24, 31, 1, 'Played Captain America in the Marvel Cinematic Universe', NULL),
    (25, 32, 3, 'actor', NULL),
    (26, 32, 1, 'Played Thor in the Marvel Cinematic Universe', NULL),
    (27, 9, 1, 'Won Academy Award for The Revenant', NULL),
    (28, 9, 7, '1974-11-11', NULL),
    (29, 10, 7, '1965-04-04', NULL),
    (30, 16, 7, '1974-01-30', NULL),
    (31, 47, 7, '1974-10-28', NULL),
    (32, 48, 7, '1976-11-29', NULL),
    (33, 29, 7, '1984-11-22', NULL),
    (34, 31, 7, '1981-06-13', NULL),
    (35, 32, 7, '1983-08-11', NULL),
    (36, 21, 14, 'Won an Oscar for Les Miserables.', 'IMDB staff'),
    (37, 21, 14, 'Voiced Queen in Shrek 2.', 'IMDB staff'),
    (38, 21, 28, '5 ft 8 in (1.73 m)', 'IMDB staff'),
    (39, 6, 30, 'Famous for his role in The Godfather', 'Volker Boehm');

# aka_title table
statement ok
CREATE TABLE aka_title (
    id INT NOT NULL,
    movie_id INT NOT NULL,
    title VARCHAR,
    imdb_index VARCHAR,
    kind_id INT NOT NULL,
    production_year INT,
    phonetic_code VARCHAR,
    episode_of_id INT,
    season_nr INT,
    episode_nr INT,
    note VARCHAR,
    md5sum VARCHAR
);

statement ok
INSERT INTO aka_title VALUES
    (1, 1, 'Shawshank', NULL, 1, 1994, NULL, NULL, NULL, NULL, NULL, NULL),
    (2, 2, 'Der Pate', NULL, 1, 1972, NULL, NULL, NULL, NULL, 'German title', NULL),
    (3, 3, 'The Dark Knight', NULL, 1, 2008, NULL, NULL, NULL, NULL, NULL, NULL),
    (4, 4, 'Der Pate II', NULL, 1, 1974, NULL, NULL, NULL, NULL, 'German title', NULL),
    (5, 5, 'Pulp Fiction', NULL, 1, 1994, NULL, NULL, NULL, NULL, NULL, NULL),
    (6, 6, 'La lista di Schindler', NULL, 1, 1993, NULL, NULL, NULL, NULL, 'Italian title', NULL),
    (7, 7, 'LOTR: ROTK', NULL, 1, 2003, NULL, NULL, NULL, NULL, 'Abbreviated', NULL),
    (8, 8, '12 Angry Men', NULL, 1, 1957, NULL, NULL, NULL, NULL, NULL, NULL),
    (9, 9, 'Dream Heist', NULL, 1, 2010, NULL, NULL, NULL, NULL, 'Working title', NULL),
    (10, 10, 'Fight Club', NULL, 1, 1999, NULL, NULL, NULL, NULL, NULL, NULL),
    (11, 3, 'Batman: The Dark Knight', NULL, 1, 2008, NULL, NULL, NULL, NULL, 'Full title', NULL),
    (12, 13, 'Avengers 4', NULL, 1, 2019, NULL, NULL, NULL, NULL, 'Abbreviated', NULL),
    (13, 19, 'The Joker', NULL, 1, 2019, NULL, NULL, NULL, NULL, 'Working title', NULL),
    (14, 23, 'Iron Man: Birth of a Hero', NULL, 1, 2008, NULL, NULL, NULL, NULL, 'Extended title', NULL),
    (15, 24, 'Black Panther: Wakanda Forever', NULL, 1, 2018, NULL, NULL, NULL, NULL, 'Alternate title', NULL),
    (16, 11, 'Avengers 3', NULL, 1, 2018, NULL, NULL, NULL, NULL, 'Abbreviated', NULL),
    (17, 3, 'Batman 2', NULL, 1, 2008, NULL, NULL, NULL, NULL, 'Sequel numbering', NULL),
    (18, 20, 'Batman: Year One', NULL, 1, 2005, NULL, NULL, NULL, NULL, 'Working title', NULL),
    (19, 14, 'Journey to the Stars', NULL, 1, 2014, NULL, NULL, NULL, NULL, 'Working title', NULL),
    (20, 25, 'Rose and Jack', NULL, 1, 1997, NULL, NULL, NULL, NULL, 'Character-based title', NULL),
    (21, 19, 'Joker: A Descent Into Madness', NULL, 1, 2019, NULL, NULL, NULL, NULL, 'Extended title', NULL),
    (22, 22, 'Batman 3', NULL, 1, 2012, NULL, NULL, NULL, NULL, 'Sequel numbering', NULL),
    (23, 1, 'The Shawshank Redemption', NULL, 1, 1994, NULL, NULL, NULL, NULL, 'Full title', NULL),
    (24, 19, 'El Joker', NULL, 1, 2019, NULL, NULL, NULL, NULL, 'Spanish title', NULL),
    (25, 13, 'Los Vengadores: Endgame', NULL, 1, 2019, NULL, NULL, NULL, NULL, 'Spanish title', NULL),
    (26, 19, 'The Batman', NULL, 1, 2022, NULL, NULL, NULL, NULL, 'Working title', NULL),
    (27, 41, 'Champion Boxer: The Rise of a Legend', NULL, 1, 2018, NULL, NULL, NULL, NULL, 'Extended title', NULL),
    (28, 47, 'The Swedish Murder Case', NULL, 1, 2012, NULL, NULL, NULL, NULL, 'Full title', NULL),
    (29, 46, 'Viral Documentary', NULL, 1, 2008, NULL, NULL, NULL, NULL, 'Alternate title', NULL),
    (30, 45, 'Berlin Noir', NULL, 1, 2010, 989898, NULL, NULL, NULL, NULL, NULL),
    (31, 44, 'Digital Connection', NULL, 1, 2005, NULL, NULL, NULL, NULL, NULL, NULL),
    (32, 62, 'Animated Feature', NULL, 1, 2010, 123456, NULL, NULL, NULL, NULL, NULL);

# 1a - Query with production companies and top 250 rank
query TTI
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t 
WHERE ct.kind = 'production companies'
  AND it.info = 'top 250 rank'
  AND mc.note  not like '%(as Metro-Goldwyn-Mayer Pictures)%' and (mc.note like '%(co-production)%' or mc.note like '%(presents)%')
  AND ct.id = mc.company_type_id
  AND t.id = mc.movie_id
  AND t.id = mi_idx.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND it.id = mi_idx.info_type_id
----
(co-production) Avengers: Endgame 1985

# 1b - Query with production companies and bottom 10 rank
query TTI
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t 
WHERE ct.kind = 'production companies'
  AND it.info = 'bottom 10 rank'
  AND mc.note  not like '%(as Metro-Goldwyn-Mayer Pictures)%'
  AND t.production_year between 2005 and 2010
  AND ct.id = mc.company_type_id
  AND t.id = mc.movie_id
  AND t.id = mi_idx.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND it.id = mi_idx.info_type_id
----
(as Warner Bros. Pictures) Bad Movie Sequel 2008

# 1c - Query with distributors and top 250 rank
query TTI
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t 
WHERE ct.kind = 'production companies'
  AND it.info = 'top 250 rank'
  AND mc.note  not like '%(as Metro-Goldwyn-Mayer Pictures)%' and (mc.note like '%(co-production)%')
  AND t.production_year >2010
  AND ct.id = mc.company_type_id
  AND t.id = mc.movie_id
  AND t.id = mi_idx.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND it.id = mi_idx.info_type_id
----
(co-production) Avengers: Endgame 2014

# 1d - Query with production companies and top 250 rank (different production year)
query TTI
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t 
WHERE ct.kind = 'production companies'
  AND it.info = 'bottom 10 rank'
  AND mc.note  not like '%(as Metro-Goldwyn-Mayer Pictures)%'
  AND t.production_year >2000
  AND ct.id = mc.company_type_id
  AND t.id = mc.movie_id
  AND t.id = mi_idx.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND it.id = mi_idx.info_type_id
----
(as Warner Bros. Pictures) Bad Movie Sequel 2008

# 2a - Query with German companies and character-name-in-title
query T
SELECT MIN(t.title) AS movie_title
FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t 
WHERE cn.country_code ='[de]'
  AND k.keyword ='character-name-in-title'
  AND cn.id = mc.company_id
  AND mc.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND mc.movie_id = mk.movie_id
----
Joker

# 2b - Query with Dutch companies and character-name-in-title
query T
SELECT MIN(t.title) AS movie_title
FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t 
WHERE cn.country_code ='[nl]'
  AND k.keyword ='character-name-in-title'
  AND cn.id = mc.company_id
  AND mc.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND mc.movie_id = mk.movie_id
----
Iron Man

# 2c - Query with Slovenian companies and female name in title
query T
SELECT MIN(t.title) AS movie_title
FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t 
WHERE cn.country_code ='[sm]'
  AND k.keyword ='character-name-in-title'
  AND cn.id = mc.company_id
  AND mc.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND mc.movie_id = mk.movie_id
----
Joker

# 2d - Query with US companies and murder movies
query T
SELECT MIN(t.title) AS movie_title
FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND cn.id = mc.company_id
  AND mc.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND mc.movie_id = mk.movie_id
----
Bruno

# 3a - Query with runtimes > 100
query T
SELECT MIN(t.title) AS movie_title
FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE k.keyword  like '%sequel%'
  AND mi.info  IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
  AND t.production_year > 2005
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi.movie_id
  AND k.id = mk.keyword_id
----
The Godfather Part II

# 3b - Query with Bulgarian movies
query T
SELECT MIN(t.title) AS movie_title
FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE k.keyword  like '%sequel%'
  AND mi.info  IN ('Bulgaria')
  AND t.production_year > 2000
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi.movie_id
  AND k.id = mk.keyword_id
----
The Dark Knight

# 3c - Query with biographies
query T
SELECT MIN(t.title) AS movie_title
FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE k.keyword  like '%sequel%'
  AND mi.info  IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
  AND t.production_year > 1990
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi.movie_id
  AND k.id = mk.keyword_id
----
Avengers: Endgame

# 4a - Query with certain actor names 
query TT
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_title
FROM info_type AS it, keyword AS k, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t 
WHERE it.info ='rating'
  AND k.keyword  like '%sequel%'
  AND mi_idx.info  > '5.0'
  AND t.production_year > 2005
  AND t.id = mi_idx.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it.id = mi_idx.info_type_id
----
8.9 Avengers: Endgame

# 4b - Query with certain actor names (revised)
query TT
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_title
FROM info_type AS it, keyword AS k, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t 
WHERE it.info ='rating'
  AND k.keyword  like '%sequel%'
  AND mi_idx.info  > '9.0'
  AND t.production_year > 2000
  AND t.id = mi_idx.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it.id = mi_idx.info_type_id
----
9.1 The Dark Knight

# 4c - Query with actors from certain period
query TT
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_title
FROM info_type AS it, keyword AS k, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t 
WHERE it.info ='rating'
  AND k.keyword  like '%sequel%'
  AND mi_idx.info  > '2.0'
  AND t.production_year > 1990
  AND t.id = mi_idx.movie_id
  AND t.id = mk.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it.id = mi_idx.info_type_id
----
7.2 Avengers: Endgame

# 5a - Query with keyword and movie links
query T
SELECT MIN(t.title) AS typical_european_movie
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info AS mi, title AS t 
WHERE ct.kind  = 'production companies'
  AND mc.note  like '%(theatrical)%' and mc.note like '%(France)%'
  AND mi.info  IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
  AND t.production_year > 2005
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND mc.movie_id = mi.movie_id
  AND ct.id = mc.company_type_id
  AND it.id = mi.info_type_id
----
The Matrix

# 5b - Query with keyword and directors
query T
SELECT MIN(t.title) AS american_vhs_movie
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info AS mi, title AS t 
WHERE ct.kind  = 'production companies'
  AND mc.note  like '%(VHS)%' and mc.note like '%(USA)%' and mc.note like '%(1994)%'
  AND mi.info  IN ('USA', 'America')
  AND t.production_year > 2000
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND mc.movie_id = mi.movie_id
  AND ct.id = mc.company_type_id
  AND it.id = mi.info_type_id
----
The Matrix

# 5c - Query with female leading roles
query T
SELECT MIN(t.title) AS american_movie
FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info AS mi, title AS t 
WHERE ct.kind  = 'production companies'
  AND mc.note  not like '%(TV)%' and mc.note like '%(USA)%'
  AND mi.info  IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
  AND t.production_year > 1990
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND mc.movie_id = mi.movie_id
  AND ct.id = mc.company_type_id
  AND it.id = mi.info_type_id
----
Champion Boxer

# 6a - Query for Marvel movies with Robert Downey
query TTT
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie
FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword = 'marvel-cinematic-universe'
  AND n.name LIKE '%Downey%Robert%'
  AND t.production_year > 2010
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
----
marvel-cinematic-universe Downey Robert Jr. Avengers: Endgame

# 6b - Query for male actors in movies after 2009
query TTT
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS hero_movie
FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
  AND n.name LIKE '%Downey%Robert%'
  AND t.production_year > 2014
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
----
sequel Downey Robert Jr. Avengers: Endgame

# 6c - Query for superhero movies from specific year
query TTT
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie
FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword = 'marvel-cinematic-universe'
  AND n.name LIKE '%Downey%Robert%'
  AND t.production_year > 2014
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
----
marvel-cinematic-universe Downey Robert Jr. Avengers: Endgame

# 6d - Query for specific director
query TTT
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS hero_movie
FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
  AND n.name LIKE '%Downey%Robert%'
  AND t.production_year > 2000
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
----
based-on-comic Downey Robert Jr. Avengers: Endgame

# 6e - Query for advanced superhero movies
query TTT
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie
FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword = 'marvel-cinematic-universe'
  AND n.name LIKE '%Downey%Robert%'
  AND t.production_year > 2000
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
----
marvel-cinematic-universe Downey Robert Jr. Avengers: Endgame

# 6f - Query for complex superhero movies
query TTT
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS hero_movie
FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
  AND t.production_year > 2000
  AND k.id = mk.keyword_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mk.movie_id
  AND n.id = ci.person_id
----
based-on-comic Al Pacino Avengers: Endgame

# 7a - Query about character names
query TT
SELECT MIN(n.name) AS of_person, MIN(t.title) AS biography_movie
FROM aka_name AS an, cast_info AS ci, info_type AS it, link_type AS lt, movie_link AS ml, name AS n, person_info AS pi, title AS t 
WHERE an.name LIKE '%a%'
  AND it.info ='mini biography'
  AND lt.link ='features'
  AND n.name_pcode_cf BETWEEN 'A'
  AND 'F'
  AND (n.gender='m' OR (n.gender = 'f'
  AND n.name LIKE 'B%'))
  AND pi.note ='Volker Boehm'
  AND t.production_year BETWEEN 1980
  AND 1995
  AND n.id = an.person_id
  AND n.id = pi.person_id
  AND ci.person_id = n.id
  AND t.id = ci.movie_id
  AND ml.linked_movie_id = t.id
  AND lt.id = ml.link_type_id
  AND it.id = pi.info_type_id
  AND pi.person_id = an.person_id
  AND pi.person_id = ci.person_id
  AND an.person_id = ci.person_id
  AND ci.movie_id = ml.linked_movie_id -- #Al Pacino The Godfather
----
Derek Jacobi Derek Jacobi Story

# 7b - Query for person with biography
query TT
SELECT MIN(n.name) AS of_person, MIN(t.title) AS biography_movie
FROM aka_name AS an, cast_info AS ci, info_type AS it, link_type AS lt, movie_link AS ml, name AS n, person_info AS pi, title AS t
WHERE an.name LIKE '%a%'
  AND it.info ='mini biography'
  AND lt.link ='features'
  AND n.name_pcode_cf LIKE 'D%'
  AND n.gender='m'
  AND pi.note ='Volker Boehm'
  AND t.production_year BETWEEN 1980
  AND 1984
  AND n.id = an.person_id
  AND n.id = pi.person_id
  AND ci.person_id = n.id
  AND t.id = ci.movie_id
  AND ml.linked_movie_id = t.id
  AND lt.id = ml.link_type_id
  AND it.id = pi.info_type_id
  AND pi.person_id = an.person_id
  AND pi.person_id = ci.person_id
  AND an.person_id = ci.person_id
  AND ci.movie_id = ml.linked_movie_id
----
Derek Jacobi Derek Jacobi Story

# 7c - Query for extended character names and biographies
query TT
SELECT MIN(n.name) AS cast_member_name, MIN(pi.info) AS cast_member_info
FROM aka_name AS an, cast_info AS ci, info_type AS it, link_type AS lt, movie_link AS ml, name AS n, person_info AS pi, title AS t 
WHERE an.name  is not NULL and (an.name LIKE '%a%' or an.name LIKE 'A%')
  AND it.info ='mini biography'
  AND lt.link  in ('references', 'referenced in', 'features', 'featured in')
  AND n.name_pcode_cf BETWEEN 'A'
  AND 'F'
  AND (n.gender='m' OR (n.gender = 'f'
  AND n.name LIKE 'A%'))
  AND pi.note  is not NULL
  AND t.production_year BETWEEN 1980
  AND 2010
  AND n.id = an.person_id
  AND n.id = pi.person_id
  AND ci.person_id = n.id
  AND t.id = ci.movie_id
  AND ml.linked_movie_id = t.id
  AND lt.id = ml.link_type_id
  AND it.id = pi.info_type_id
  AND pi.person_id = an.person_id
  AND pi.person_id = ci.person_id
  AND an.person_id = ci.person_id
  AND ci.movie_id = ml.linked_movie_id
----
Al Pacino Famous for his role in The Godfather

# 8a - Find movies by keyword
query TT
SELECT MIN(an1.name) AS actress_pseudonym, MIN(t.title) AS japanese_movie_dubbed
FROM aka_name AS an1, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n1, role_type AS rt, title AS t 
WHERE ci.note ='(voice: English version)'
  AND cn.country_code ='[jp]'
  AND mc.note like '%(Japan)%' and mc.note not like '%(USA)%'
  AND n1.name like '%Yo%' and n1.name not like '%Yu%'
  AND rt.role ='actress'
  AND an1.person_id = n1.id
  AND n1.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND an1.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
----
Yoko Shimizu One Piece: Grand Adventure

# 8b - Query for anime voice actors
query TT
SELECT MIN(an.name) AS acress_pseudonym, MIN(t.title) AS japanese_anime_movie
FROM aka_name AS an, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t 
WHERE ci.note ='(voice: English version)'
  AND cn.country_code ='[jp]'
  AND mc.note like '%(Japan)%' and mc.note not like '%(USA)%' and (mc.note like '%(2006)%' or mc.note like '%(2007)%')
  AND n.name like '%Yo%' and n.name not like '%Yu%'
  AND rt.role ='actress'
  AND t.production_year between 2006 and 2007 and (t.title like 'One Piece%' or t.title like 'Dragon Ball Z%')
  AND an.person_id = n.id
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND an.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
----
Yoko Shimizu One Piece: Grand Adventure

# 8c - Query for extended movies by keyword and voice actors
query TT
SELECT MIN(a1.name) AS writer_pseudo_name, MIN(t.title) AS movie_title
FROM aka_name AS a1, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n1, role_type AS rt, title AS t
WHERE cn.country_code ='[us]'
  AND rt.role ='writer'
  AND a1.person_id = n1.id
  AND n1.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND a1.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
----
Jim Cameron Titanic

# 8d - Query for specialized movies by keyword and voice actors
query TT
SELECT MIN(an1.name) AS costume_designer_pseudo, MIN(t.title) AS movie_with_costumes
FROM aka_name AS an1, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n1, role_type AS rt, title AS t
WHERE cn.country_code ='[us]'
  AND rt.role ='costume designer'
  AND an1.person_id = n1.id
  AND n1.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND an1.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
----
E. Head Avengers: Endgame

# 9a - Query for movie sequels
query TTT
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND mc.note  is not NULL and (mc.note like '%(USA)%' or mc.note like '%(worldwide)%')
  AND n.gender ='f' and n.name like '%Ang%'
  AND rt.role ='actress'
  AND t.production_year  between 2005 and 2015
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND ci.movie_id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND n.id = ci.person_id
  AND chn.id = ci.person_role_id
  AND an.person_id = n.id
  AND an.person_id = ci.person_id
----
Angelina Jolie Batman's Assistant Kung Fu Panda

# 9b - Query for voice actors in American movies
query TTTT
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_character, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t 
WHERE ci.note  = '(voice)'
  AND cn.country_code ='[us]'
  AND mc.note  like '%(200%)%' and (mc.note like '%(USA)%' or mc.note like '%(worldwide)%')
  AND n.gender ='f' and n.name like '%Angel%'
  AND rt.role ='actress'
  AND t.production_year  between 2007 and 2010
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND ci.movie_id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND n.id = ci.person_id
  AND chn.id = ci.person_role_id
  AND an.person_id = n.id
  AND an.person_id = ci.person_id
----
Angelina Jolie Batman's Assistant Angelina Jolie Kung Fu Panda

# 9c - Query for extended movie sequels and voice actors
query TTTT
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_character_name, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND ci.movie_id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND n.id = ci.person_id
  AND chn.id = ci.person_role_id
  AND an.person_id = n.id
  AND an.person_id = ci.person_id
----
Alexander Morgan Batman's Assistant Angelina Jolie Dragon Warriors

# 9d - Query for specialized movie sequels and voice actors
query TTTT
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND n.gender ='f'
  AND rt.role ='actress'
  AND ci.movie_id = t.id
  AND t.id = mc.movie_id
  AND ci.movie_id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.role_id = rt.id
  AND n.id = ci.person_id
  AND chn.id = ci.person_role_id
  AND an.person_id = n.id
  AND an.person_id = ci.person_id
----
Alexander Morgan Batman's Assistant Angelina Jolie Dragon Warriors

# 10a - Query for cast combinations
query TT
SELECT MIN(chn.name) AS uncredited_voiced_character, MIN(t.title) AS russian_movie
FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t
WHERE ci.note  like '%(voice)%' and ci.note like '%(uncredited)%'
  AND cn.country_code  = '[ru]'
  AND rt.role  = 'actor'
  AND t.production_year > 2005
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mc.movie_id
  AND chn.id = ci.person_role_id
  AND rt.id = ci.role_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
Nikolai Moscow Nights

# 10b - Query for Russian movie producers who are also actors
query TT
SELECT MIN(chn.name) AS character, MIN(t.title) AS russian_mov_with_actor_producer
FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t
WHERE ci.note  like '%(producer)%'
  AND cn.country_code  = '[ru]'
  AND rt.role  = 'actor'
  AND t.production_year > 2000
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mc.movie_id
  AND chn.id = ci.person_role_id
  AND rt.id = ci.role_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
Director Moscow Nights

# 10c - Query for American producers in movies
query TT
SELECT MIN(chn.name) AS character, MIN(t.title) AS movie_with_american_producer
FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t
WHERE ci.note  like '%(producer)%'
  AND cn.country_code  = '[us]'
  AND t.production_year > 1990
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mc.movie_id
  AND chn.id = ci.person_role_id
  AND rt.id = ci.role_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
Bruce Wayne The Dark Knight

# 11a - Query for non-Polish companies with sequels
query TTT
SELECT MIN(cn.name) AS from_company, MIN(lt.link) AS movie_link_type, MIN(t.title) AS non_polish_sequel_movie
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND t.production_year BETWEEN 1950
  AND 2000
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
----
Warner Bros. follows Money Talks

# 11b - Query for non-Polish companies with Money sequels from 1998
query TTT
SELECT MIN(cn.name) AS from_company, MIN(lt.link) AS movie_link_type, MIN(t.title) AS sequel_movie
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t
WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follows%'
  AND mc.note IS NULL
  AND t.production_year  = 1998 and t.title like '%Money%'
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
----
Warner Bros. Pictures follows Money Talks

# 11c - Query for Fox movies based on novels
query TTT
SELECT MIN(cn.name) AS from_company, MIN(mc.note) AS production_note, MIN(t.title) AS movie_based_on_book
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t
WHERE cn.country_code  !='[pl]' and (cn.name like '20th Century Fox%' or cn.name like 'Twentieth Century Fox%')
  AND ct.kind  != 'production companies' and ct.kind is not NULL
  AND k.keyword  in ('sequel', 'revenge', 'based-on-novel')
  AND mc.note  is not NULL
  AND t.production_year  > 1950
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
----
Twentieth Century Fox (distribution) (DVD) (US) Fox Novel Movie

# 11d - Query for movies based on novels from non-Polish companies
query TTT
SELECT MIN(cn.name) AS from_company, MIN(mc.note) AS production_note, MIN(t.title) AS movie_based_on_book
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cn.country_code  !='[pl]'
  AND ct.kind  != 'production companies' and ct.kind is not NULL
  AND k.keyword  in ('sequel', 'revenge', 'based-on-novel')
  AND mc.note  is not NULL
  AND t.production_year  > 1950
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
----
Marvel Studios (as Marvel Studios) Avengers: Endgame

# 12a - Query for cast in movies with specific genres
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS drama_horror_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t 
WHERE cn.country_code  = '[us]'
  AND ct.kind  = 'production companies'
  AND it1.info = 'genres'
  AND it2.info = 'rating'
  AND mi.info  in ('Drama', 'Horror')
  AND mi_idx.info  > '8.0'
  AND t.production_year  between 2005 and 2008
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND mi.info_type_id = it1.id
  AND mi_idx.info_type_id = it2.id
  AND t.id = mc.movie_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
----
Warner Bros. 9.5 The Dark Knight

# 12b - Query for unsuccessful movies with specific budget criteria
query TT
SELECT MIN(mi.info) AS budget, MIN(t.title) AS unsuccsessful_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t
WHERE cn.country_code ='[us]'
  AND ct.kind  is not NULL and (ct.kind ='production companies' or ct.kind = 'distributors')
  AND it1.info ='budget'
  AND it2.info ='bottom 10 rank'
  AND t.production_year >2000
  AND (t.title LIKE 'Birdemic%' OR t.title LIKE '%Movie%')
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND mi.info_type_id = it1.id
  AND mi_idx.info_type_id = it2.id
  AND t.id = mc.movie_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
----
$500,000 Bad Movie Sequel

# 12c - Query for highly rated mainstream movies
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS mainstream_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t
WHERE cn.country_code  = '[us]'
  AND ct.kind  = 'production companies'
  AND it1.info = 'genres'
  AND it2.info = 'rating'
  AND mi.info  in ('Drama', 'Horror', 'Western', 'Family')
  AND mi_idx.info  > '7.0'
  AND t.production_year  between 2000 and 2010
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND mi.info_type_id = it1.id
  AND mi_idx.info_type_id = it2.id
  AND t.id = mc.movie_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
----
Warner Bros. 9.5 The Dark Knight

# 13a - Query for movies with specific genre combinations
query TTT
SELECT MIN(mi.info) AS release_date, MIN(miidx.info) AS rating, MIN(t.title) AS german_movie
FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t
WHERE cn.country_code ='[de]'
  AND ct.kind ='production companies'
  AND it.info ='rating'
  AND it2.info ='release dates'
  AND kt.kind ='movie'
  AND mi.movie_id = t.id
  AND it2.id = mi.info_type_id
  AND kt.id = t.kind_id
  AND mc.movie_id = t.id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND miidx.movie_id = t.id
  AND it.id = miidx.info_type_id
  AND mi.movie_id = miidx.movie_id
  AND mi.movie_id = mc.movie_id
  AND miidx.movie_id = mc.movie_id
----
2005-09-15 7.2 Dark Blood

# 13b - Query for movies about winning with specific criteria
query TTT
SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie_about_winning
FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t
WHERE cn.country_code ='[us]'
  AND ct.kind ='production companies'
  AND it.info ='rating'
  AND it2.info ='release dates'
  AND kt.kind ='movie'
  AND t.title  != ''
  AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%')
  AND mi.movie_id = t.id
  AND it2.id = mi.info_type_id
  AND kt.id = t.kind_id
  AND mc.movie_id = t.id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND miidx.movie_id = t.id
  AND it.id = miidx.info_type_id
  AND mi.movie_id = miidx.movie_id
  AND mi.movie_id = mc.movie_id
  AND miidx.movie_id = mc.movie_id
----
Universal Pictures 7.5 Champion Boxer

# 13c - Query for movies with Champion in the title
query TTT
SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie_about_winning
FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t
WHERE cn.country_code ='[us]'
  AND ct.kind ='production companies'
  AND it.info ='rating'
  AND it2.info ='release dates'
  AND kt.kind ='movie'
  AND t.title  != ''
  AND (t.title LIKE 'Champion%' OR t.title LIKE 'Loser%')
  AND mi.movie_id = t.id
  AND it2.id = mi.info_type_id
  AND kt.id = t.kind_id
  AND mc.movie_id = t.id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND miidx.movie_id = t.id
  AND it.id = miidx.info_type_id
  AND mi.movie_id = miidx.movie_id
  AND mi.movie_id = mc.movie_id
  AND miidx.movie_id = mc.movie_id
----
Universal Pictures 7.5 Champion Boxer

# 13d - Query for all US movies
query TTT
SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie
FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t
WHERE cn.country_code ='[us]'
  AND ct.kind ='production companies'
  AND it.info ='rating'
  AND it2.info ='release dates'
  AND kt.kind ='movie'
  AND mi.movie_id = t.id
  AND it2.id = mi.info_type_id
  AND kt.id = t.kind_id
  AND mc.movie_id = t.id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND miidx.movie_id = t.id
  AND it.id = miidx.info_type_id
  AND mi.movie_id = miidx.movie_id
  AND mi.movie_id = mc.movie_id
  AND miidx.movie_id = mc.movie_id
----
Marvel Studios 7.5 Avengers: Endgame

# 14a - Query for actors in specific movie types
query TT
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie
FROM info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  = 'movie'
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  < '8.5'
  AND t.production_year  > 2010
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
----
7.5 Nordic Noir

# 14b - Query for dark western productions with specific criteria
query TT
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS western_dark_production
FROM info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title')
  AND kt.kind  = 'movie'
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  > '6.0'
  AND t.production_year  > 2010 and (t.title like '%murder%' or t.title like '%Murder%' or t.title like '%Mord%')
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
----
7.8 The Swedish Murder Case

# 14c - Query for extended movie types and dark themes
query TT
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS north_european_dark_production
FROM info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  is not null and k.keyword in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  < '8.5'
  AND t.production_year  > 2005
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
----
6.8 Berlin Noir

# 15a - Query for US movies with internet releases
query TT
SELECT MIN(mi.info) AS release_date, MIN(t.title) AS internet_movie
FROM aka_title AS at, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t
WHERE cn.country_code  = '[us]'
  AND it1.info  = 'release dates'
  AND mc.note  like '%(200%)%' and mc.note like '%(worldwide)%'
  AND mi.note  like '%internet%'
  AND mi.info  like 'USA:% 200%'
  AND t.production_year  > 2000
  AND t.id = at.movie_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = at.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = at.movie_id
  AND mc.movie_id = at.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
USA: 2008-05-15 The Dark Knight

# 15b - Query for YouTube movies with specific release criteria
query TT
SELECT MIN(mi.info) AS release_date, MIN(t.title) AS youtube_movie
FROM aka_title AS at, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t
WHERE cn.country_code  = '[us]' and cn.name = 'YouTube'
  AND it1.info  = 'release dates'
  AND mc.note  like '%(200%)%' and mc.note like '%(worldwide)%'
  AND mi.note  like '%internet%'
  AND mi.info  like 'USA:% 200%'
  AND t.production_year  between 2005 and 2010
  AND t.id = at.movie_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = at.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = at.movie_id
  AND mc.movie_id = at.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
USA: 2008-05-15 YouTube Documentary

# 15c - Query for extended internet releases
query TT
SELECT MIN(mi.info) AS release_date, MIN(t.title) AS modern_american_internet_movie
FROM aka_title AS at, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE cn.country_code  = '[us]'
  AND it1.info  = 'release dates'
  AND mi.note  like '%internet%'
  AND mi.info  is not NULL and (mi.info like 'USA:% 199%' or mi.info like 'USA:% 200%')
  AND t.production_year  > 1990
  AND t.id = at.movie_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = at.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = at.movie_id
  AND mc.movie_id = at.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
USA: 15 May 2005 Digital Connection

# 15d - Query for specialized internet releases
query TT
SELECT MIN(at.title) AS aka_title, MIN(t.title) AS internet_movie_title
FROM aka_title AS at, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE cn.country_code  = '[us]'
  AND it1.info  = 'release dates'
  AND mi.note  like '%internet%'
  AND t.production_year  > 1990
  AND t.id = at.movie_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = at.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = at.movie_id
  AND mc.movie_id = at.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
----
Avengers 4 Avengers: Endgame

# 16a - Query for movies in specific languages
query TT
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND t.episode_nr >= 50
  AND t.episode_nr < 100
  AND an.person_id = n.id
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND an.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Alexander Morgan Character Series

# 16b - Query for series named after characters
query TT
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND an.person_id = n.id
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND an.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Alexander Morgan Character Series

# 16c - Query for extended languages and character-named series
query TT
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND t.episode_nr < 100
  AND an.person_id = n.id
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND an.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Alexander Morgan Character Series

# 16d - Query for specialized languages and character-named series
query TT
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char
FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND t.episode_nr >= 5
  AND t.episode_nr < 100
  AND an.person_id = n.id
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND an.person_id = ci.person_id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Alexander Morgan Character Series

# 17a - Query for actor/actress combinations
query TT
SELECT MIN(n.name) AS member_in_charnamed_american_movie, MIN(n.name) AS a1
FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND n.name  LIKE 'B%'
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Bert Wilson Bert Wilson

# 17b - Query for actors with names starting with Z in character-named movies
query TT
SELECT MIN(n.name) AS member_in_charnamed_movie, MIN(n.name) AS a1
FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword ='character-name-in-title'
  AND n.name  LIKE 'Z%'
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Zach Wilson Zach Wilson

# 17c - Query for extended actor/actress combinations
query TT
SELECT MIN(n.name) AS member_in_charnamed_movie, MIN(n.name) AS a1
FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t
WHERE k.keyword ='character-name-in-title'
  AND n.name  LIKE 'X%'
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Xavier Thompson Xavier Thompson

# 17d - Query for specialized actor/actress combinations
query T
SELECT MIN(n.name) AS member_in_charnamed_movie
FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t
WHERE k.keyword ='character-name-in-title'
  AND n.name  LIKE '%Bert%'
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Bert Wilson

# 17e - Query for advanced actor/actress combinations
query T
SELECT MIN(n.name) AS member_in_charnamed_movie
FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE cn.country_code ='[us]'
  AND k.keyword ='character-name-in-title'
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Alex Morgan

# 17f - Query for complex actor/actress combinations
query T
SELECT MIN(n.name) AS member_in_charnamed_movie
FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t 
WHERE k.keyword ='character-name-in-title'
  AND n.name  LIKE '%B%'
  AND n.id = ci.person_id
  AND ci.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_id = cn.id
  AND ci.movie_id = mc.movie_id
  AND ci.movie_id = mk.movie_id
  AND mc.movie_id = mk.movie_id
----
Bert Wilson

# 18a - Query with complex genre filtering
query TTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t
WHERE ci.note  in ('(producer)', '(executive producer)')
  AND it1.info  = 'budget'
  AND it2.info  = 'votes'
  AND n.gender  = 'm' and n.name like '%Tim%'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
----
$25,000,000 2,345,678 The Shawshank Redemption

# 18b - Query for horror movies by female writers with high ratings
query TTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'rating'
  AND mi.info  in ('Horror', 'Thriller') and mi.note is NULL
  AND mi_idx.info  > '8.0'
  AND n.gender  is not null and n.gender = 'f'
  AND t.production_year  between 2008 and 2014
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
----
Horror 8.5 Woman in Black

# 18c - Query for extended genre filtering
query TTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title
FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
  AND n.gender  = 'm'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
----
Horror 1000 Halloween

# 19a - Query for character name patterns
query TT
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND mc.note  is not NULL and (mc.note like '%(USA)%' or mc.note like '%(worldwide)%')
  AND mi.info  is not null and (mi.info like 'Japan:%200%' or mi.info like 'USA:%200%')
  AND n.gender ='f' and n.name like '%Ang%'
  AND rt.role ='actress'
  AND t.production_year  between 2005 and 2009
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mi.movie_id = ci.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
----
Angelina Jolie Kung Fu Panda

# 19b - Query for Angelina Jolie as voice actress in Kung Fu Panda series
query TT
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS kung_fu_panda
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t
WHERE ci.note  = '(voice)'
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND mc.note  like '%(200%)%' and (mc.note like '%(USA)%' or mc.note like '%(worldwide)%')
  AND mi.info  is not null and (mi.info like 'Japan:%2007%' or mi.info like 'USA:%2008%')
  AND n.gender ='f' and n.name like '%Angel%'
  AND rt.role ='actress'
  AND t.production_year  between 2007 and 2008 and t.title like '%Kung%Fu%Panda%'
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mi.movie_id = ci.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
----
Angelina Jolie Kung Fu Panda

# 19c - Query for extended character patterns
query TT
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS jap_engl_voiced_movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND mi.info  is not null and (mi.info like 'Japan:%200%' or mi.info like 'USA:%200%')
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND t.production_year  > 2000
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mi.movie_id = ci.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
----
Angelina Jolie Kung Fu Panda

# 19d - Query for specialized character patterns
query TT
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS jap_engl_voiced_movie
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND n.gender ='f'
  AND rt.role ='actress'
  AND t.production_year  > 2000
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mi.movie_id = ci.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
----
Angelina Jolie Kung Fu Panda

# 20a - Query for movies with specific actor roles
query T
SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like '%complete%'
  AND chn.name  not like '%Sherlock%' and (chn.name like '%Tony%Stark%' or chn.name like '%Iron%Man%')
  AND k.keyword  in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
  AND kt.kind  = 'movie'
  AND t.production_year  > 1950
  AND kt.id = t.kind_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = ci.movie_id
  AND mk.movie_id = cc.movie_id
  AND ci.movie_id = cc.movie_id
  AND chn.id = ci.person_role_id
  AND n.id = ci.person_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Iron Man

# 20b - Query for complete Downey Iron Man movies
query T
SELECT MIN(t.title) AS complete_downey_ironman_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like '%complete%'
  AND chn.name  not like '%Sherlock%' and (chn.name like '%Tony%Stark%' or chn.name like '%Iron%Man%')
  AND k.keyword  in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence')
  AND kt.kind  = 'movie'
  AND n.name  LIKE '%Downey%Robert%'
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = ci.movie_id
  AND mk.movie_id = cc.movie_id
  AND ci.movie_id = cc.movie_id
  AND chn.id = ci.person_role_id
  AND n.id = ci.person_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Iron Man

# 20c - Query for extended specific actor roles
query TT
SELECT MIN(n.name) AS cast_member, MIN(t.title) AS complete_dynamic_hero_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like '%complete%'
  AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%')
  AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
  AND kt.kind  = 'movie'
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = ci.movie_id
  AND mk.movie_id = cc.movie_id
  AND ci.movie_id = cc.movie_id
  AND chn.id = ci.person_role_id
  AND n.id = ci.person_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Downey Robert Jr. Iron Man

# 21a - Query for movies with specific production years
query TTT
SELECT MIN(cn.name) AS company_name, MIN(lt.link) AS link_type, MIN(t.title) AS western_follow_up
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')
  AND t.production_year BETWEEN 1950
  AND 2000
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND mi.movie_id = t.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND ml.movie_id = mi.movie_id
  AND mk.movie_id = mi.movie_id
  AND mc.movie_id = mi.movie_id
----
Warner Bros. Pictures follows The Western Sequel

# 21b - Query for German follow-up movies
query TTT
SELECT MIN(cn.name) AS company_name, MIN(lt.link) AS link_type, MIN(t.title) AS german_follow_up
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND mi.info IN ('Germany', 'German')
  AND t.production_year BETWEEN 2000
  AND 2010
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND mi.movie_id = t.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND ml.movie_id = mi.movie_id
  AND mk.movie_id = mi.movie_id
  AND mc.movie_id = mi.movie_id
----
Berlin Film Studio follows Dark Blood

# 21c - Query for extended specific production years
query TTT
SELECT MIN(cn.name) AS company_name, MIN(lt.link) AS link_type, MIN(t.title) AS western_follow_up
FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t
WHERE cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
  AND t.production_year BETWEEN 1950
  AND 2010
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND mi.movie_id = t.id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND ml.movie_id = mi.movie_id
  AND mk.movie_id = mi.movie_id
  AND mc.movie_id = mi.movie_id
----
Berlin Film Studio follows Dark Blood

# 22a - Query for movies with specific actor roles
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%'
  AND mi.info IN ('Germany', 'German', 'USA', 'American')
  AND mi_idx.info  < '7.0'
  AND t.production_year  > 2008
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
----
Berlin Film Studio 6.8 Berlin Noir

# 22b - Query for western violent movies by non-US companies
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%'
  AND mi.info IN ('Germany', 'German', 'USA', 'American')
  AND mi_idx.info  < '7.0'
  AND t.production_year  > 2009
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
----
Berlin Film Studio 6.8 Berlin Noir

# 22c - Query for extended actor roles
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%'
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  < '8.5'
  AND t.production_year  > 2005
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
----
Berlin Film Studio 6.8 Berlin Noir

# 22d - Query for specialized actor roles
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie
FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t 
WHERE cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  < '8.5'
  AND t.production_year  > 2005
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
----
Berlin Film Studio 6.8 Berlin Noir

# 23a - Query for sequels with specific character names
query TT
SELECT MIN(kt.kind) AS movie_kind, MIN(t.title) AS complete_us_internet_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t
WHERE cct1.kind  = 'complete+verified'
  AND cn.country_code  = '[us]'
  AND it1.info  = 'release dates'
  AND kt.kind  in ('movie')
  AND mi.note  like '%internet%'
  AND mi.info  is not NULL and (mi.info like 'USA:% 199%' or mi.info like 'USA:% 200%')
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = cc.movie_id
  AND mc.movie_id = cc.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND cct1.id = cc.status_id
----
movie Digital Connection

# 23b - Query for complete nerdy internet movies
query TT
SELECT MIN(kt.kind) AS movie_kind, MIN(t.title) AS complete_nerdy_internet_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE cct1.kind  = 'complete+verified'
  AND cn.country_code  = '[us]'
  AND it1.info  = 'release dates'
  AND k.keyword  in ('nerd', 'loner', 'alienation', 'dignity')
  AND kt.kind  in ('movie')
  AND mi.note  like '%internet%'
  AND mi.info  like 'USA:% 200%'
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = cc.movie_id
  AND mc.movie_id = cc.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND cct1.id = cc.status_id
----
movie Digital Connection

# 23c - Query for extended sequels with specific attributes
query TT
SELECT MIN(kt.kind) AS movie_kind, MIN(t.title) AS complete_us_internet_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t 
WHERE cct1.kind  = 'complete+verified'
  AND cn.country_code  = '[us]'
  AND it1.info  = 'release dates'
  AND kt.kind  in ('movie', 'tv movie', 'video movie', 'video game')
  AND mi.note  like '%internet%'
  AND mi.info  is not NULL and (mi.info like 'USA:% 199%' or mi.info like 'USA:% 200%')
  AND t.production_year  > 1990
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = cc.movie_id
  AND mc.movie_id = cc.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND cn.id = mc.company_id
  AND ct.id = mc.company_type_id
  AND cct1.id = cc.status_id
----
movie Digital Connection

# 24a - Query for movies with specific budgets
query TTT
SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND k.keyword  in ('hero', 'martial-arts', 'hand-to-hand-combat')
  AND mi.info  is not null and (mi.info like 'Japan:%201%' or mi.info like 'USA:%201%')
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND t.production_year  > 2010
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mk.movie_id
  AND mi.movie_id = ci.movie_id
  AND mi.movie_id = mk.movie_id
  AND ci.movie_id = mk.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
  AND k.id = mk.keyword_id
----
Batman's Assistant Angelina Jolie Kung Fu Panda 2

# 24b - Query for voiced characters in Kung Fu Panda
query TTT
SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS kung_fu_panda
FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t 
WHERE ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND cn.name  = 'DreamWorks Animation'
  AND it.info  = 'release dates'
  AND k.keyword  in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')
  AND mi.info  is not null and (mi.info like 'Japan:%201%' or mi.info like 'USA:%201%')
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND t.production_year  > 2010
  AND t.title like 'Kung Fu Panda%'
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mk.movie_id
  AND mi.movie_id = ci.movie_id
  AND mi.movie_id = mk.movie_id
  AND ci.movie_id = mk.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
  AND k.id = mk.keyword_id
----
Batman's Assistant Angelina Jolie Kung Fu Panda 2

# 25a - Query for cast combinations in specific movies
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'blood', 'gore', 'death', 'female-nudity')
  AND mi.info  = 'Horror'
  AND n.gender  = 'm'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
----
Horror 1000 Christian Bale Halloween

# 25b - Query for violent horror films with male writers
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'blood', 'gore', 'death', 'female-nudity')
  AND mi.info  = 'Horror'
  AND n.gender   = 'm'
  AND t.production_year  > 2010
  AND t.title  like 'Vampire%'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
----
Horror 1000 Christian Bale Vampire Chronicles

# 25c - Query for extended cast combinations
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title
FROM cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
  AND n.gender   = 'm'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
----
Horror 1000 Christian Bale Halloween

# 26a - Query for specific movie genres with ratings
query TTTT
SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(n.name) AS playing_actor, MIN(t.title) AS complete_hero_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like '%complete%'
  AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%')
  AND it2.info  = 'rating'
  AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
  AND kt.kind  = 'movie'
  AND mi_idx.info  > '7.0'
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND t.id = cc.movie_id
  AND t.id = mi_idx.movie_id
  AND mk.movie_id = ci.movie_id
  AND mk.movie_id = cc.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND ci.movie_id = cc.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND cc.movie_id = mi_idx.movie_id
  AND chn.id = ci.person_role_id
  AND n.id = ci.person_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
  AND it2.id = mi_idx.info_type_id
----
Ironman 8.5 John Carpenter Marvel Superhero Epic

# 26b - Query for complete hero movies with Man in character name
query TTT
SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like '%complete%'
  AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%')
  AND it2.info  = 'rating'
  AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'fight')
  AND kt.kind  = 'movie'
  AND mi_idx.info  > '8.0'
  AND t.production_year  > 2005
  AND kt.id = t.kind_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND t.id = cc.movie_id
  AND t.id = mi_idx.movie_id
  AND mk.movie_id = ci.movie_id
  AND mk.movie_id = cc.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND ci.movie_id = cc.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND cc.movie_id = mi_idx.movie_id
  AND chn.id = ci.person_role_id
  AND n.id = ci.person_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
  AND it2.id = mi_idx.info_type_id
----
Ironman 8.5 Marvel Superhero Epic

# 26c - Query for extended movie genres and ratings
query TTT
SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like '%complete%'
  AND chn.name  is not NULL and (chn.name like '%man%' or chn.name like '%Man%')
  AND it2.info  = 'rating'
  AND k.keyword  in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')
  AND kt.kind  = 'movie'
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mk.movie_id
  AND t.id = ci.movie_id
  AND t.id = cc.movie_id
  AND t.id = mi_idx.movie_id
  AND mk.movie_id = ci.movie_id
  AND mk.movie_id = cc.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND ci.movie_id = cc.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND cc.movie_id = mi_idx.movie_id
  AND chn.id = ci.person_role_id
  AND n.id = ci.person_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
  AND it2.id = mi_idx.info_type_id
----
Ironman 8.5 Marvel Superhero Epic

# 27a - Query for movies with specific person roles
query TTT
SELECT MIN(cn.name) AS producing_company, MIN(lt.link) AS link_type, MIN(t.title) AS complete_western_sequel
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cct1.kind  in ('cast', 'crew')
  AND cct2.kind  = 'complete'
  AND cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND mi.info IN ('Sweden', 'Germany','Swedish', 'German')
  AND t.production_year BETWEEN 1950
  AND 2000
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND mi.movie_id = t.id
  AND t.id = cc.movie_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND ml.movie_id = mi.movie_id
  AND mk.movie_id = mi.movie_id
  AND mc.movie_id = mi.movie_id
  AND ml.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi.movie_id = cc.movie_id
----
Warner Bros. Pictures follows The Western Sequel

# 27b - Query for complete western sequel films by non-Polish companies
query TTT
SELECT MIN(cn.name) AS producing_company, MIN(lt.link) AS link_type, MIN(t.title) AS complete_western_sequel
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cct1.kind  in ('cast', 'crew')
  AND cct2.kind  = 'complete'
  AND cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND mi.info IN ('Sweden', 'Germany','Swedish', 'German')
  AND t.production_year  = 1998
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND mi.movie_id = t.id
  AND t.id = cc.movie_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND ml.movie_id = mi.movie_id
  AND mk.movie_id = mi.movie_id
  AND mc.movie_id = mi.movie_id
  AND ml.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi.movie_id = cc.movie_id
----
Warner Bros. Pictures follows The Western Sequel

# 27c - Query for extended person roles
query TTT
SELECT MIN(cn.name) AS producing_company, MIN(lt.link) AS link_type, MIN(t.title) AS complete_western_sequel
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t 
WHERE cct1.kind  = 'cast'
  AND cct2.kind  like 'complete%'
  AND cn.country_code !='[pl]'
  AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%')
  AND ct.kind ='production companies'
  AND k.keyword ='sequel'
  AND lt.link LIKE '%follow%'
  AND mc.note IS NULL
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')
  AND t.production_year BETWEEN 1950
  AND 2010
  AND lt.id = ml.link_type_id
  AND ml.movie_id = t.id
  AND t.id = mk.movie_id
  AND mk.keyword_id = k.id
  AND t.id = mc.movie_id
  AND mc.company_type_id = ct.id
  AND mc.company_id = cn.id
  AND mi.movie_id = t.id
  AND t.id = cc.movie_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
  AND ml.movie_id = mk.movie_id
  AND ml.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND ml.movie_id = mi.movie_id
  AND mk.movie_id = mi.movie_id
  AND mc.movie_id = mi.movie_id
  AND ml.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi.movie_id = cc.movie_id
----
Warner Bros. Pictures follows The Western Sequel

# 28a - Query for movies with specific production years
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t
WHERE cct1.kind  = 'crew'
  AND cct2.kind  != 'complete+verified'
  AND cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%'
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  < '8.5'
  AND t.production_year  > 2000
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = cc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi_idx.movie_id = cc.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Stockholm Productions 7.8 The Nordic Murders

# 28b - Query for Euro dark movies with complete crew
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t 
WHERE cct1.kind  = 'crew'
  AND cct2.kind  != 'complete+verified'
  AND cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%'
  AND mi.info  IN ('Sweden', 'Germany', 'Swedish', 'German')
  AND mi_idx.info  > '6.5'
  AND t.production_year  > 2005
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = cc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi_idx.movie_id = cc.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Stockholm Productions 7.8 The Nordic Murders

# 28c - Query for extended movies with specific criteria
query TTT
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t 
WHERE cct1.kind  = 'cast'
  AND cct2.kind  = 'complete'
  AND cn.country_code  != '[us]'
  AND it1.info  = 'countries'
  AND it2.info  = 'rating'
  AND k.keyword  in ('murder', 'murder-in-title', 'blood', 'violence')
  AND kt.kind  in ('movie', 'episode')
  AND mc.note  not like '%(USA)%' and mc.note like '%(200%)%'
  AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')
  AND mi_idx.info  < '8.5'
  AND t.production_year  > 2005
  AND kt.id = t.kind_id
  AND t.id = mi.movie_id
  AND t.id = mk.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = mc.movie_id
  AND t.id = cc.movie_id
  AND mk.movie_id = mi.movie_id
  AND mk.movie_id = mi_idx.movie_id
  AND mk.movie_id = mc.movie_id
  AND mk.movie_id = cc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi.movie_id = cc.movie_id
  AND mc.movie_id = mi_idx.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi_idx.movie_id = cc.movie_id
  AND k.id = mk.keyword_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND ct.id = mc.company_type_id
  AND cn.id = mc.company_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Oslo Films 7.5 Scandinavian Crime

# 29a - Query for movies with specific combinations
query TTT
SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation
FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t
WHERE cct1.kind  ='cast'
  AND cct2.kind  ='complete+verified'
  AND chn.name  = 'Queen'
  AND ci.note  in ('(voice)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND it3.info  = 'trivia'
  AND k.keyword  = 'computer-animation'
  AND mi.info  is not null and (mi.info like 'Japan:%200%' or mi.info like 'USA:%200%')
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND t.title  = 'Shrek 2'
  AND t.production_year  between 2000 and 2010
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = cc.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mk.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi.movie_id = ci.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = cc.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
  AND n.id = pi.person_id
  AND ci.person_id = pi.person_id
  AND it3.id = pi.info_type_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Queen Anne Hathaway Shrek 2

# 29b - Query for specific Queen character voice actress
query TTT
SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation
FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t
WHERE cct1.kind  ='cast'
  AND cct2.kind  ='complete+verified'
  AND chn.name  = 'Queen'
  AND ci.note  in ('(voice)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND it3.info  = 'height'
  AND k.keyword  = 'computer-animation'
  AND mi.info  like 'USA:%200%'
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND t.title  = 'Shrek 2'
  AND t.production_year  between 2000 and 2005
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = cc.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mk.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi.movie_id = ci.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = cc.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
  AND n.id = pi.person_id
  AND ci.person_id = pi.person_id
  AND it3.id = pi.info_type_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Queen Anne Hathaway Shrek 2

# 29c - Query for extended specific combinations
query TTT
SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation
FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t
WHERE cct1.kind  ='cast'
  AND cct2.kind  ='complete+verified'
  AND ci.note  in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')
  AND cn.country_code ='[us]'
  AND it.info  = 'release dates'
  AND it3.info  = 'trivia'
  AND k.keyword  = 'computer-animation'
  AND mi.info  is not null and (mi.info like 'Japan:%200%' or mi.info like 'USA:%200%')
  AND n.gender ='f' and n.name like '%An%'
  AND rt.role ='actress'
  AND t.production_year  between 2000 and 2010
  AND t.id = mi.movie_id
  AND t.id = mc.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = cc.movie_id
  AND mc.movie_id = ci.movie_id
  AND mc.movie_id = mi.movie_id
  AND mc.movie_id = mk.movie_id
  AND mc.movie_id = cc.movie_id
  AND mi.movie_id = ci.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = cc.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND cn.id = mc.company_id
  AND it.id = mi.info_type_id
  AND n.id = ci.person_id
  AND rt.id = ci.role_id
  AND n.id = an.person_id
  AND ci.person_id = an.person_id
  AND chn.id = ci.person_role_id
  AND n.id = pi.person_id
  AND ci.person_id = pi.person_id
  AND it3.id = pi.info_type_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Queen Anne Hathaway Shrek 2

# 30a - Query for top-rated action movies
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS complete_violent_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE cct1.kind  in ('cast', 'crew')
  AND cct2.kind  ='complete+verified'
  AND ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mi.info  in ('Horror', 'Thriller')
  AND n.gender  = 'm'
  AND t.production_year  > 2000
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = cc.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = cc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = cc.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND mi_idx.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Horror 52000 James Wan Saw IV

# 30b - Query for ratings of female-cast-only movies
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS complete_gore_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE cct1.kind  in ('cast', 'crew')
  AND cct2.kind  ='complete+verified'
  AND ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mi.info  in ('Horror', 'Thriller')
  AND n.gender  = 'm'
  AND t.production_year  > 2000 and (t.title like '%Freddy%' or t.title like '%Jason%' or t.title like 'Saw%')
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = cc.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = cc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = cc.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND mi_idx.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Horror 52000 James Wan Saw IV

# 30c - Query for extended action movies
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS complete_violent_movie
FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE cct1.kind  = 'cast'
  AND cct2.kind  ='complete+verified'
  AND ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = cc.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = cc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = cc.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND mi_idx.movie_id = cc.movie_id
  AND mk.movie_id = cc.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
  AND cct1.id = cc.subject_id
  AND cct2.id = cc.status_id
----
Horror 52000 James Wan Saw IV

# 31a - Query for movies with specific language and production values
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND cn.name  like 'Lionsgate%'
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mi.info  in ('Horror', 'Thriller')
  AND n.gender   = 'm'
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND mi_idx.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
  AND cn.id = mc.company_id
----
Horror 45000 James Wan Halloween

# 31b - Query for sci-fi female-focused movies
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND cn.name  like 'Lionsgate%'
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mc.note  like '%(Blu-ray)%'
  AND mi.info  in ('Horror', 'Thriller')
  AND n.gender  = 'm'
  AND t.production_year  > 2000 and (t.title like '%Freddy%' or t.title like '%Jason%' or t.title like 'Saw%')
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND mi_idx.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
  AND cn.id = mc.company_id
----
Horror 52000 James Wan Saw IV

# 31c - Query for extended language and production values
query TTTT
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie
FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t 
WHERE ci.note  in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')
  AND cn.name  like 'Lionsgate%'
  AND it1.info  = 'genres'
  AND it2.info  = 'votes'
  AND k.keyword  in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital')
  AND mi.info  in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')
  AND t.id = mi.movie_id
  AND t.id = mi_idx.movie_id
  AND t.id = ci.movie_id
  AND t.id = mk.movie_id
  AND t.id = mc.movie_id
  AND ci.movie_id = mi.movie_id
  AND ci.movie_id = mi_idx.movie_id
  AND ci.movie_id = mk.movie_id
  AND ci.movie_id = mc.movie_id
  AND mi.movie_id = mi_idx.movie_id
  AND mi.movie_id = mk.movie_id
  AND mi.movie_id = mc.movie_id
  AND mi_idx.movie_id = mk.movie_id
  AND mi_idx.movie_id = mc.movie_id
  AND mk.movie_id = mc.movie_id
  AND n.id = ci.person_id
  AND it1.id = mi.info_type_id
  AND it2.id = mi_idx.info_type_id
  AND k.id = mk.keyword_id
  AND cn.id = mc.company_id
----
Horror 45000 James Wan Halloween

# 32a - Query for action movies with specific actor roles
query TTT
SELECT MIN(lt.link) AS link_type, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 
WHERE k.keyword ='10,000-mile-club'
  AND mk.keyword_id = k.id
  AND t1.id = mk.movie_id
  AND ml.movie_id = t1.id
  AND ml.linked_movie_id = t2.id
  AND lt.id = ml.link_type_id
  AND mk.movie_id = t1.id
----
edited into Interstellar Saving Private Ryan

# 32b - Query for character-name-in-title movies and their connections
query TTT
SELECT MIN(lt.link) AS link_type, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 
WHERE k.keyword ='character-name-in-title'
  AND mk.keyword_id = k.id
  AND t1.id = mk.movie_id
  AND ml.movie_id = t1.id
  AND ml.linked_movie_id = t2.id
  AND lt.id = ml.link_type_id
  AND mk.movie_id = t1.id
----
featured in Iron Man Avengers: Endgame

# 33a - Query for directors of sequels with specific ratings
query TTTTTT
SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 
WHERE cn1.country_code  = '[us]'
  AND it1.info  = 'rating'
  AND it2.info  = 'rating'
  AND kt1.kind  in ('tv series')
  AND kt2.kind  in ('tv series')
  AND lt.link  in ('sequel', 'follows', 'followed by')
  AND mi_idx2.info  < '3.0'
  AND t2.production_year  between 2005 and 2008
  AND lt.id = ml.link_type_id
  AND t1.id = ml.movie_id
  AND t2.id = ml.linked_movie_id
  AND it1.id = mi_idx1.info_type_id
  AND t1.id = mi_idx1.movie_id
  AND kt1.id = t1.kind_id
  AND cn1.id = mc1.company_id
  AND t1.id = mc1.movie_id
  AND ml.movie_id = mi_idx1.movie_id
  AND ml.movie_id = mc1.movie_id
  AND mi_idx1.movie_id = mc1.movie_id
  AND it2.id = mi_idx2.info_type_id
  AND t2.id = mi_idx2.movie_id
  AND kt2.id = t2.kind_id
  AND cn2.id = mc2.company_id
  AND t2.id = mc2.movie_id
  AND ml.linked_movie_id = mi_idx2.movie_id
  AND ml.linked_movie_id = mc2.movie_id
  AND mi_idx2.movie_id = mc2.movie_id
----
Paramount Pictures Paramount Pictures 8.2 2.8 Breaking Bad Breaking Bad: The Final Season

# 33b - Query for linked TV series by country code
query TTTTTT
SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 
WHERE cn1.country_code  = '[nl]'
  AND it1.info  = 'rating'
  AND it2.info  = 'rating'
  AND kt1.kind  in ('tv series')
  AND kt2.kind  in ('tv series')
  AND lt.link  LIKE '%follow%'
  AND mi_idx2.info  < '3.0'
  AND t2.production_year  = 2007
  AND lt.id = ml.link_type_id
  AND t1.id = ml.movie_id
  AND t2.id = ml.linked_movie_id
  AND it1.id = mi_idx1.info_type_id
  AND t1.id = mi_idx1.movie_id
  AND kt1.id = t1.kind_id
  AND cn1.id = mc1.company_id
  AND t1.id = mc1.movie_id
  AND ml.movie_id = mi_idx1.movie_id
  AND ml.movie_id = mc1.movie_id
  AND mi_idx1.movie_id = mc1.movie_id
  AND it2.id = mi_idx2.info_type_id
  AND t2.id = mi_idx2.movie_id
  AND kt2.id = t2.kind_id
  AND cn2.id = mc2.company_id
  AND t2.id = mc2.movie_id
  AND ml.linked_movie_id = mi_idx2.movie_id
  AND ml.linked_movie_id = mc2.movie_id
  AND mi_idx2.movie_id = mc2.movie_id
----
Dutch Entertainment Group Amsterdam Studios 8.5 2.5 Amsterdam Detective Amsterdam Detective: Cold Case

# 33c - Query for linked TV series and episodes with specific ratings
query TTTTTT
SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie
FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 
WHERE cn1.country_code  != '[us]'
  AND it1.info  = 'rating'
  AND it2.info  = 'rating'
  AND kt1.kind  in ('tv series', 'episode')
  AND kt2.kind  in ('tv series', 'episode')
  AND lt.link  in ('sequel', 'follows', 'followed by')
  AND mi_idx2.info  < '3.5'
  AND t2.production_year  between 2000 and 2010
  AND lt.id = ml.link_type_id
  AND t1.id = ml.movie_id
  AND t2.id = ml.linked_movie_id
  AND it1.id = mi_idx1.info_type_id
  AND t1.id = mi_idx1.movie_id
  AND kt1.id = t1.kind_id
  AND cn1.id = mc1.company_id
  AND t1.id = mc1.movie_id
  AND ml.movie_id = mi_idx1.movie_id
  AND ml.movie_id = mc1.movie_id
  AND mi_idx1.movie_id = mc1.movie_id
  AND it2.id = mi_idx2.info_type_id
  AND t2.id = mi_idx2.movie_id
  AND kt2.id = t2.kind_id
  AND cn2.id = mc2.company_id
  AND t2.id = mc2.movie_id
  AND ml.linked_movie_id = mi_idx2.movie_id
  AND ml.linked_movie_id = mc2.movie_id
  AND mi_idx2.movie_id = mc2.movie_id
----
Dutch Entertainment Group Amsterdam Studios 8.5 2.5 Amsterdam Detective Amsterdam Detective: Cold Case

# Clean up all tables
statement ok
DROP TABLE company_type;

statement ok
DROP TABLE info_type;

statement ok
DROP TABLE title;

statement ok
DROP TABLE movie_companies;

statement ok
DROP TABLE movie_info_idx;

statement ok
DROP TABLE movie_info;

statement ok
DROP TABLE kind_type;

statement ok
DROP TABLE cast_info;

statement ok
DROP TABLE char_name;

statement ok
DROP TABLE keyword;

statement ok
DROP TABLE movie_keyword;

statement ok
DROP TABLE company_name;

statement ok
DROP TABLE name;

statement ok
DROP TABLE role_type;

statement ok
DROP TABLE link_type;

statement ok
DROP TABLE movie_link;

statement ok
DROP TABLE complete_cast;

statement ok
DROP TABLE comp_cast_type;

statement ok
DROP TABLE person_info;

statement ok
DROP TABLE aka_title;

statement ok
DROP TABLE aka_name;
