# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

query T
SELECT substr('alphabet', -3)
----
alphabet

query T
SELECT substr('alphabet', 0)
----
alphabet

query T
SELECT substr('alphabet', 1)
----
alphabet

query T
SELECT substr('alphabet', 2)
----
lphabet

query T
SELECT substr('alphabet', 3)
----
phabet

query T
SELECT substr('alphabet', 30)
----
(empty)

query T
SELECT substr('alphabet', 3, 2)
----
ph

query T
SELECT substr('alphabet', 3, 20)
----
phabet

query TT
select
    substr(arrow_cast('alphabet', 'LargeUtf8'), 3, 20),
    substr(arrow_cast('alphabet', 'Utf8View'), 3, 20);
----
phabet phabet

# test range ouside of string length
query TTTTTTTTTTTT
SELECT
    substr('hi🌏', 1, 3),
    substr('hi🌏', 1, 4),
    substr('hi🌏', 1, 100),
    substr('hi🌏', 0, 1),
    substr('hi🌏', 0, 2),
    substr('hi🌏', 0, 4),
    substr('hi🌏', 0, 5),
    substr('hi🌏', -10, 100),
    substr('hi🌏', -10, 12),
    substr('hi🌏', -10, 5),
    substr('hi🌏', 10, 0),
    substr('hi🌏', 10, 10);
----
hi🌏 hi🌏 hi🌏 (empty) h hi🌏 hi🌏 hi🌏 h (empty) (empty) (empty)

query TTTTTTTTTTTT
SELECT
    substr('', 1, 3),
    substr('', 1, 4),
    substr('', 1, 100),
    substr('', 0, 1),
    substr('', 0, 2),
    substr('', 0, 4),
    substr('', 0, 5),
    substr('', -10, 100),
    substr('', -10, 12),
    substr('', -10, 5),
    substr('', 10, 0),
    substr('', 10, 10);
----
(empty) (empty) (empty) (empty) (empty) (empty) (empty) (empty) (empty) (empty) (empty) (empty)

# Nulls
query TTTTTTTTTT
SELECT
  substr('alphabet', NULL),
  substr(NULL, 1),
  substr(NULL, NULL),
  substr('alphabet', CAST(NULL AS int), -20),
  substr('alphabet', 3, CAST(NULL AS int)),
  substr(NULL, 3, -4),
  substr(NULL, NULL, 4),
  substr(NULL, 1, NULL),
  substr('', NULL, NULL),
  substr(NULL, NULL, NULL);
----
NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL

query T
SELECT substr('Hello🌏世界', 5)
----
o🌏世界

query T
SELECT substr('Hello🌏世界', 5, 3)
----
o🌏世

statement error The SUBSTR function can only accept strings, but got Int64.
SELECT substr(1, 3)

statement error The SUBSTR function can only accept strings, but got Int64.
SELECT substr(1, 3, 4)

statement error Execution error: negative substring length not allowed
select substr(arrow_cast('foo', 'Utf8View'), 1, -1);

statement error Execution error: negative substring length not allowed
select substr('', 1, -1);

# StringView scalar to StringView scalar

query BBBB
select
  arrow_cast('NULL', 'Utf8View') = arrow_cast('Andrew', 'Utf8View'),
  arrow_cast('NULL', 'Utf8View') <> arrow_cast('Andrew', 'Utf8View'),
  arrow_cast('Andrew', 'Utf8View') = arrow_cast('Andrew', 'Utf8View'),
  arrow_cast('Xiangpeng', 'Utf8View') <> arrow_cast('Andrew', 'Utf8View');
----
false true true true


query II
SELECT
  ASCII('hello'),
  ASCII(arrow_cast('world', 'Utf8View'))
----
104 119

query III
SELECT
  ASCII(arrow_cast('äöüß', 'Utf8View')) as c1,
  ASCII(arrow_cast('', 'Utf8View')) as c2,
  ASCII(arrow_cast(NULL, 'Utf8View')) as c3
----
228 0 NULL

# coercion from stringview to integer, as input to make_date
query D
select make_date(arrow_cast('2024', 'Utf8View'), arrow_cast('01', 'Utf8View'), arrow_cast('23', 'Utf8View'))
----
2024-01-23
