
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

query TT
explain select
    s_acctbal,
    s_name,
    n_name,
    p_partkey,
    p_mfgr,
    s_address,
    s_phone,
    s_comment
from
    part,
    supplier,
    partsupp,
    nation,
    region
where
        p_partkey = ps_partkey
  and s_suppkey = ps_suppkey
  and p_size = 15
  and p_type like '%BRASS'
  and s_nationkey = n_nationkey
  and n_regionkey = r_regionkey
  and r_name = 'EUROPE'
  and ps_supplycost = (
    select
        min(ps_supplycost)
    from
        partsupp,
        supplier,
        nation,
        region
    where
            p_partkey = ps_partkey
      and s_suppkey = ps_suppkey
      and s_nationkey = n_nationkey
      and n_regionkey = r_regionkey
      and r_name = 'EUROPE'
)
order by
    s_acctbal desc,
    n_name,
    s_name,
    p_partkey
limit 10;
----
logical_plan
01)Sort: supplier.s_acctbal DESC NULLS FIRST, nation.n_name ASC NULLS LAST, supplier.s_name ASC NULLS LAST, part.p_partkey ASC NULLS LAST, fetch=10
02)--Projection: supplier.s_acctbal, supplier.s_name, nation.n_name, part.p_partkey, part.p_mfgr, supplier.s_address, supplier.s_phone, supplier.s_comment
03)----Inner Join: part.p_partkey = __scalar_sq_1.ps_partkey, partsupp.ps_supplycost = __scalar_sq_1.min(partsupp.ps_supplycost)
04)------Projection: part.p_partkey, part.p_mfgr, supplier.s_name, supplier.s_address, supplier.s_phone, supplier.s_acctbal, supplier.s_comment, partsupp.ps_supplycost, nation.n_name
05)--------Inner Join: nation.n_regionkey = region.r_regionkey
06)----------Projection: part.p_partkey, part.p_mfgr, supplier.s_name, supplier.s_address, supplier.s_phone, supplier.s_acctbal, supplier.s_comment, partsupp.ps_supplycost, nation.n_name, nation.n_regionkey
07)------------Inner Join: supplier.s_nationkey = nation.n_nationkey
08)--------------Projection: part.p_partkey, part.p_mfgr, supplier.s_name, supplier.s_address, supplier.s_nationkey, supplier.s_phone, supplier.s_acctbal, supplier.s_comment, partsupp.ps_supplycost
09)----------------Inner Join: partsupp.ps_suppkey = supplier.s_suppkey
10)------------------Projection: part.p_partkey, part.p_mfgr, partsupp.ps_suppkey, partsupp.ps_supplycost
11)--------------------Inner Join: part.p_partkey = partsupp.ps_partkey
12)----------------------Projection: part.p_partkey, part.p_mfgr
13)------------------------Filter: part.p_size = Int32(15) AND part.p_type LIKE Utf8View("%BRASS")
14)--------------------------TableScan: part projection=[p_partkey, p_mfgr, p_type, p_size], partial_filters=[part.p_size = Int32(15), part.p_type LIKE Utf8View("%BRASS")]
15)----------------------TableScan: partsupp projection=[ps_partkey, ps_suppkey, ps_supplycost]
16)------------------TableScan: supplier projection=[s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment]
17)--------------TableScan: nation projection=[n_nationkey, n_name, n_regionkey]
18)----------Projection: region.r_regionkey
19)------------Filter: region.r_name = Utf8View("EUROPE")
20)--------------TableScan: region projection=[r_regionkey, r_name], partial_filters=[region.r_name = Utf8View("EUROPE")]
21)------SubqueryAlias: __scalar_sq_1
22)--------Projection: min(partsupp.ps_supplycost), partsupp.ps_partkey
23)----------Aggregate: groupBy=[[partsupp.ps_partkey]], aggr=[[min(partsupp.ps_supplycost)]]
24)------------Projection: partsupp.ps_partkey, partsupp.ps_supplycost
25)--------------Inner Join: nation.n_regionkey = region.r_regionkey
26)----------------Projection: partsupp.ps_partkey, partsupp.ps_supplycost, nation.n_regionkey
27)------------------Inner Join: supplier.s_nationkey = nation.n_nationkey
28)--------------------Projection: partsupp.ps_partkey, partsupp.ps_supplycost, supplier.s_nationkey
29)----------------------Inner Join: partsupp.ps_suppkey = supplier.s_suppkey
30)------------------------TableScan: partsupp projection=[ps_partkey, ps_suppkey, ps_supplycost]
31)------------------------TableScan: supplier projection=[s_suppkey, s_nationkey]
32)--------------------TableScan: nation projection=[n_nationkey, n_regionkey]
33)----------------Projection: region.r_regionkey
34)------------------Filter: region.r_name = Utf8View("EUROPE")
35)--------------------TableScan: region projection=[r_regionkey, r_name], partial_filters=[region.r_name = Utf8View("EUROPE")]
physical_plan_error Object Store error: Object at location /WORKSPACE_ROOT/datafusion/sqllogictest/test_files/tpch/data/region.tbl not found: No such file or directory (os error 2)
